# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer/default_interface.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
  def setupUi(self, MainWindow):
    MainWindow.setObjectName("MainWindow")
    MainWindow.resize(990, 861)
    icon = QtGui.QIcon()
    icon.addPixmap(QtGui.QPixmap(":/General/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    MainWindow.setWindowIcon(icon)
    MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
    MainWindow.setDockNestingEnabled(False)
    MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks)
    self.centralwidget = QtWidgets.QWidget(MainWindow)
    self.centralwidget.setObjectName("centralwidget")
    self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.centralwidget)
    self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_6.setObjectName("verticalLayout_6")
    self.mainSplitter = QtWidgets.QSplitter(self.centralwidget)
    self.mainSplitter.setOrientation(QtCore.Qt.Horizontal)
    self.mainSplitter.setChildrenCollapsible(False)
    self.mainSplitter.setObjectName("mainSplitter")
    self.leftEntries = QtWidgets.QFrame(self.mainSplitter)
    self.leftEntries.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.leftEntries.setFrameShadow(QtWidgets.QFrame.Raised)
    self.leftEntries.setObjectName("leftEntries")
    self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.leftEntries)
    self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_5.setSpacing(0)
    self.verticalLayout_5.setObjectName("verticalLayout_5")
    self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_12.setContentsMargins(4, 4, 4, 2)
    self.horizontalLayout_12.setSpacing(7)
    self.horizontalLayout_12.setObjectName("horizontalLayout_12")
    self.label_28 = QtWidgets.QLabel(self.leftEntries)
    self.label_28.setObjectName("label_28")
    self.horizontalLayout_12.addWidget(self.label_28)
    self.numberSearchEntry = QtWidgets.QLineEdit(self.leftEntries)
    self.numberSearchEntry.setObjectName("numberSearchEntry")
    self.horizontalLayout_12.addWidget(self.numberSearchEntry)
    self.verticalLayout_5.addLayout(self.horizontalLayout_12)
    self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_11.setContentsMargins(4, -1, -1, 2)
    self.horizontalLayout_11.setObjectName("horizontalLayout_11")
    self.histogramActive = QtWidgets.QRadioButton(self.leftEntries)
    self.histogramActive.setChecked(True)
    self.histogramActive.setObjectName("histogramActive")
    self.horizontalLayout_11.addWidget(self.histogramActive)
    self.eventActive = QtWidgets.QRadioButton(self.leftEntries)
    self.eventActive.setObjectName("eventActive")
    self.horizontalLayout_11.addWidget(self.eventActive)
    self.oldFormatActive = QtWidgets.QRadioButton(self.leftEntries)
    self.oldFormatActive.setObjectName("oldFormatActive")
    self.horizontalLayout_11.addWidget(self.oldFormatActive)
    self.verticalLayout_5.addLayout(self.horizontalLayout_11)
    self.eventModeEntries = QtWidgets.QWidget(self.leftEntries)
    self.eventModeEntries.setObjectName("eventModeEntries")
    self.verticalLayout = QtWidgets.QVBoxLayout(self.eventModeEntries)
    self.verticalLayout.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout.setObjectName("verticalLayout")
    self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_10.setContentsMargins(4, -1, -1, -1)
    self.horizontalLayout_10.setObjectName("horizontalLayout_10")
    self.label_27 = QtWidgets.QLabel(self.eventModeEntries)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_27.sizePolicy().hasHeightForWidth())
    self.label_27.setSizePolicy(sizePolicy)
    self.label_27.setObjectName("label_27")
    self.horizontalLayout_10.addWidget(self.label_27)
    self.eventTofBins = QtWidgets.QSpinBox(self.eventModeEntries)
    self.eventTofBins.setMinimum(5)
    self.eventTofBins.setMaximum(200)
    self.eventTofBins.setSingleStep(5)
    self.eventTofBins.setProperty("value", 40)
    self.eventTofBins.setObjectName("eventTofBins")
    self.horizontalLayout_10.addWidget(self.eventTofBins)
    self.eventBinMode = QtWidgets.QComboBox(self.eventModeEntries)
    self.eventBinMode.setObjectName("eventBinMode")
    self.eventBinMode.addItem("")
    self.eventBinMode.addItem("")
    self.eventBinMode.addItem("")
    self.horizontalLayout_10.addWidget(self.eventBinMode)
    self.verticalLayout.addLayout(self.horizontalLayout_10)
    self.gridLayout_6 = QtWidgets.QGridLayout()
    self.gridLayout_6.setContentsMargins(4, -1, -1, -1)
    self.gridLayout_6.setObjectName("gridLayout_6")
    self.eventSplitIndex = LimitingSpinBox(self.eventModeEntries)
    self.eventSplitIndex.setMinimum(1)
    self.eventSplitIndex.setObjectName("eventSplitIndex")
    self.gridLayout_6.addWidget(self.eventSplitIndex, 2, 3, 1, 1)
    self.eventSplitItems = QtWidgets.QSpinBox(self.eventModeEntries)
    self.eventSplitItems.setMinimum(2)
    self.eventSplitItems.setSingleStep(1)
    self.eventSplitItems.setProperty("value", 10)
    self.eventSplitItems.setObjectName("eventSplitItems")
    self.gridLayout_6.addWidget(self.eventSplitItems, 2, 1, 1, 1)
    self.label_38 = QtWidgets.QLabel(self.eventModeEntries)
    self.label_38.setObjectName("label_38")
    self.gridLayout_6.addWidget(self.label_38, 2, 2, 1, 1)
    self.label_39 = QtWidgets.QLabel(self.eventModeEntries)
    self.label_39.setObjectName("label_39")
    self.gridLayout_6.addWidget(self.label_39, 2, 0, 1, 1)
    self.eventSplit = QtWidgets.QCheckBox(self.eventModeEntries)
    self.eventSplit.setObjectName("eventSplit")
    self.gridLayout_6.addWidget(self.eventSplit, 0, 0, 1, 3)
    self.eventTotalTimeLabel = QtWidgets.QLabel(self.eventModeEntries)
    self.eventTotalTimeLabel.setObjectName("eventTotalTimeLabel")
    self.gridLayout_6.addWidget(self.eventTotalTimeLabel, 0, 3, 1, 1)
    self.verticalLayout.addLayout(self.gridLayout_6)
    self.verticalLayout_5.addWidget(self.eventModeEntries)
    self.file_list = QtWidgets.QListWidget(self.leftEntries)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(1)
    sizePolicy.setHeightForWidth(self.file_list.sizePolicy().hasHeightForWidth())
    self.file_list.setSizePolicy(sizePolicy)
    self.file_list.setObjectName("file_list")
    self.verticalLayout_5.addWidget(self.file_list)
    self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_15.setObjectName("horizontalLayout_15")
    self.pushButton_2 = QtWidgets.QPushButton(self.leftEntries)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.pushButton_2.sizePolicy().hasHeightForWidth())
    self.pushButton_2.setSizePolicy(sizePolicy)
    self.pushButton_2.setObjectName("pushButton_2")
    self.horizontalLayout_15.addWidget(self.pushButton_2)
    self.pushButton_3 = QtWidgets.QPushButton(self.leftEntries)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.pushButton_3.sizePolicy().hasHeightForWidth())
    self.pushButton_3.setSizePolicy(sizePolicy)
    self.pushButton_3.setObjectName("pushButton_3")
    self.horizontalLayout_15.addWidget(self.pushButton_3)
    self.verticalLayout_5.addLayout(self.horizontalLayout_15)
    self.toolBox = QtWidgets.QToolBox(self.leftEntries)
    self.toolBox.setFrameShape(QtWidgets.QFrame.NoFrame)
    self.toolBox.setLineWidth(0)
    self.toolBox.setObjectName("toolBox")
    self.page = QtWidgets.QWidget()
    self.page.setGeometry(QtCore.QRect(0, 0, 256, 132))
    self.page.setObjectName("page")
    self.gridLayout_3 = QtWidgets.QGridLayout(self.page)
    self.gridLayout_3.setContentsMargins(2, 2, 2, 2)
    self.gridLayout_3.setVerticalSpacing(1)
    self.gridLayout_3.setObjectName("gridLayout_3")
    self.refYPos = QtWidgets.QDoubleSpinBox(self.page)
    self.refYPos.setDecimals(1)
    self.refYPos.setMaximum(400.0)
    self.refYPos.setProperty("value", 128.0)
    self.refYPos.setObjectName("refYPos")
    self.gridLayout_3.addWidget(self.refYPos, 1, 2, 1, 1)
    self.label_3 = QtWidgets.QLabel(self.page)
    self.label_3.setStyleSheet("text-align: right;")
    self.label_3.setObjectName("label_3")
    self.gridLayout_3.addWidget(self.label_3, 1, 1, 1, 1)
    self.label_2 = QtWidgets.QLabel(self.page)
    self.label_2.setMinimumSize(QtCore.QSize(0, 18))
    self.label_2.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
    self.label_2.setObjectName("label_2")
    self.gridLayout_3.addWidget(self.label_2, 0, 3, 1, 1)
    self.rangeEnd = QtWidgets.QSpinBox(self.page)
    self.rangeEnd.setMaximum(200)
    self.rangeEnd.setProperty("value", 0)
    self.rangeEnd.setObjectName("rangeEnd")
    self.gridLayout_3.addWidget(self.rangeEnd, 5, 3, 1, 1)
    self.refXPos = QtWidgets.QDoubleSpinBox(self.page)
    self.refXPos.setDecimals(1)
    self.refXPos.setMaximum(400.0)
    self.refXPos.setProperty("value", 128.0)
    self.refXPos.setObjectName("refXPos")
    self.gridLayout_3.addWidget(self.refXPos, 2, 2, 1, 1)
    self.bgWidth = QtWidgets.QDoubleSpinBox(self.page)
    self.bgWidth.setDecimals(1)
    self.bgWidth.setMaximum(400.0)
    self.bgWidth.setProperty("value", 4.0)
    self.bgWidth.setObjectName("bgWidth")
    self.gridLayout_3.addWidget(self.bgWidth, 3, 3, 1, 1)
    self.bgCenter = QtWidgets.QDoubleSpinBox(self.page)
    self.bgCenter.setDecimals(1)
    self.bgCenter.setMaximum(400.0)
    self.bgCenter.setProperty("value", 2.0)
    self.bgCenter.setObjectName("bgCenter")
    self.gridLayout_3.addWidget(self.bgCenter, 3, 2, 1, 1)
    self.label_4 = QtWidgets.QLabel(self.page)
    self.label_4.setStyleSheet("text-align: right;")
    self.label_4.setObjectName("label_4")
    self.gridLayout_3.addWidget(self.label_4, 2, 1, 1, 1)
    self.refScale = QtWidgets.QDoubleSpinBox(self.page)
    self.refScale.setDecimals(3)
    self.refScale.setMinimum(-20.0)
    self.refScale.setMaximum(20.0)
    self.refScale.setSingleStep(0.02)
    self.refScale.setProperty("value", 0.0)
    self.refScale.setObjectName("refScale")
    self.gridLayout_3.addWidget(self.refScale, 4, 3, 1, 1)
    self.rangeStart = QtWidgets.QSpinBox(self.page)
    self.rangeStart.setMaximum(200)
    self.rangeStart.setObjectName("rangeStart")
    self.gridLayout_3.addWidget(self.rangeStart, 5, 2, 1, 1)
    self.refXWidth = QtWidgets.QDoubleSpinBox(self.page)
    self.refXWidth.setDecimals(1)
    self.refXWidth.setMinimum(1.0)
    self.refXWidth.setMaximum(304.0)
    self.refXWidth.setProperty("value", 9.0)
    self.refXWidth.setObjectName("refXWidth")
    self.gridLayout_3.addWidget(self.refXWidth, 2, 3, 1, 1)
    self.refYWidth = QtWidgets.QDoubleSpinBox(self.page)
    self.refYWidth.setDecimals(1)
    self.refYWidth.setMinimum(1.0)
    self.refYWidth.setMaximum(400.0)
    self.refYWidth.setProperty("value", 6.0)
    self.refYWidth.setObjectName("refYWidth")
    self.gridLayout_3.addWidget(self.refYWidth, 1, 3, 1, 1)
    self.label_20 = QtWidgets.QLabel(self.page)
    self.label_20.setStyleSheet("text-align: right;")
    self.label_20.setObjectName("label_20")
    self.gridLayout_3.addWidget(self.label_20, 5, 1, 1, 1)
    self.label = QtWidgets.QLabel(self.page)
    self.label.setMinimumSize(QtCore.QSize(0, 18))
    self.label.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
    self.label.setObjectName("label")
    self.gridLayout_3.addWidget(self.label, 0, 2, 1, 1)
    self.label_5 = QtWidgets.QLabel(self.page)
    self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
    self.label_5.setObjectName("label_5")
    self.gridLayout_3.addWidget(self.label_5, 4, 2, 1, 1)
    self.bgActive = QtWidgets.QCheckBox(self.page)
    self.bgActive.setStyleSheet("text-align: right;")
    self.bgActive.setChecked(True)
    self.bgActive.setObjectName("bgActive")
    self.gridLayout_3.addWidget(self.bgActive, 3, 1, 1, 1)
    self.toolBox.addItem(self.page, "")
    self.page_2 = QtWidgets.QWidget()
    self.page_2.setGeometry(QtCore.QRect(0, 0, 256, 129))
    self.page_2.setObjectName("page_2")
    self.gridLayout_15 = QtWidgets.QGridLayout(self.page_2)
    self.gridLayout_15.setContentsMargins(2, 2, 2, 2)
    self.gridLayout_15.setVerticalSpacing(0)
    self.gridLayout_15.setObjectName("gridLayout_15")
    self.label_18 = QtWidgets.QLabel(self.page_2)
    self.label_18.setObjectName("label_18")
    self.gridLayout_15.addWidget(self.label_18, 0, 0, 1, 1)
    self.directPixelOverwrite = QtWidgets.QDoubleSpinBox(self.page_2)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.directPixelOverwrite.sizePolicy().hasHeightForWidth())
    self.directPixelOverwrite.setSizePolicy(sizePolicy)
    self.directPixelOverwrite.setDecimals(1)
    self.directPixelOverwrite.setMinimum(-1.0)
    self.directPixelOverwrite.setMaximum(304.0)
    self.directPixelOverwrite.setSingleStep(1.0)
    self.directPixelOverwrite.setProperty("value", -1.0)
    self.directPixelOverwrite.setObjectName("directPixelOverwrite")
    self.gridLayout_15.addWidget(self.directPixelOverwrite, 0, 1, 1, 2)
    self.label_19 = QtWidgets.QLabel(self.page_2)
    self.label_19.setObjectName("label_19")
    self.gridLayout_15.addWidget(self.label_19, 1, 0, 1, 1)
    self.dangle0Overwrite = QtWidgets.QLineEdit(self.page_2)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.dangle0Overwrite.sizePolicy().hasHeightForWidth())
    self.dangle0Overwrite.setSizePolicy(sizePolicy)
    self.dangle0Overwrite.setObjectName("dangle0Overwrite")
    self.gridLayout_15.addWidget(self.dangle0Overwrite, 1, 1, 1, 2)
    self.label_30 = QtWidgets.QLabel(self.page_2)
    self.label_30.setMinimumSize(QtCore.QSize(82, 0))
    self.label_30.setObjectName("label_30")
    self.gridLayout_15.addWidget(self.label_30, 2, 0, 1, 1)
    self.trustDANGLE = QtWidgets.QRadioButton(self.page_2)
    self.trustDANGLE.setMinimumSize(QtCore.QSize(76, 0))
    self.trustDANGLE.setChecked(True)
    self.trustDANGLE.setObjectName("trustDANGLE")
    self.gridLayout_15.addWidget(self.trustDANGLE, 2, 1, 1, 1)
    self.trustSANGLE = QtWidgets.QRadioButton(self.page_2)
    self.trustSANGLE.setMinimumSize(QtCore.QSize(76, 0))
    self.trustSANGLE.setObjectName("trustSANGLE")
    self.gridLayout_15.addWidget(self.trustSANGLE, 2, 2, 1, 1)
    self.label_36 = QtWidgets.QLabel(self.page_2)
    self.label_36.setObjectName("label_36")
    self.gridLayout_15.addWidget(self.label_36, 3, 0, 1, 2)
    self.polynomOrder = QtWidgets.QSpinBox(self.page_2)
    self.polynomOrder.setMaximum(10)
    self.polynomOrder.setProperty("value", 3)
    self.polynomOrder.setObjectName("polynomOrder")
    self.gridLayout_15.addWidget(self.polynomOrder, 3, 2, 1, 1)
    self.label_31 = QtWidgets.QLabel(self.page_2)
    self.label_31.setObjectName("label_31")
    self.gridLayout_15.addWidget(self.label_31, 4, 0, 1, 2)
    self.addStitchPoints = QtWidgets.QSpinBox(self.page_2)
    self.addStitchPoints.setMaximum(20)
    self.addStitchPoints.setObjectName("addStitchPoints")
    self.gridLayout_15.addWidget(self.addStitchPoints, 4, 2, 1, 1)
    self.fanReflectivity = QtWidgets.QCheckBox(self.page_2)
    self.fanReflectivity.setObjectName("fanReflectivity")
    self.gridLayout_15.addWidget(self.fanReflectivity, 5, 0, 1, 2)
    self.trustSANGLE.raise_()
    self.addStitchPoints.raise_()
    self.dangle0Overwrite.raise_()
    self.polynomOrder.raise_()
    self.label_36.raise_()
    self.trustDANGLE.raise_()
    self.label_19.raise_()
    self.label_30.raise_()
    self.directPixelOverwrite.raise_()
    self.label_31.raise_()
    self.label_18.raise_()
    self.fanReflectivity.raise_()
    self.toolBox.addItem(self.page_2, "")
    self.page_3 = QtWidgets.QWidget()
    self.page_3.setGeometry(QtCore.QRect(0, 0, 256, 128))
    self.page_3.setObjectName("page_3")
    self.gridLayout_17 = QtWidgets.QGridLayout(self.page_3)
    self.gridLayout_17.setContentsMargins(2, 2, 2, 2)
    self.gridLayout_17.setVerticalSpacing(0)
    self.gridLayout_17.setObjectName("gridLayout_17")
    self.label_29 = QtWidgets.QLabel(self.page_3)
    self.label_29.setObjectName("label_29")
    self.gridLayout_17.addWidget(self.label_29, 0, 0, 1, 1)
    self.label_24 = QtWidgets.QLabel(self.page_3)
    self.label_24.setObjectName("label_24")
    self.gridLayout_17.addWidget(self.label_24, 1, 0, 1, 1)
    self.pfSNR = QtWidgets.QDoubleSpinBox(self.page_3)
    self.pfSNR.setDecimals(1)
    self.pfSNR.setSingleStep(0.5)
    self.pfSNR.setProperty("value", 3.0)
    self.pfSNR.setObjectName("pfSNR")
    self.gridLayout_17.addWidget(self.pfSNR, 1, 1, 1, 1)
    self.label_26 = QtWidgets.QLabel(self.page_3)
    self.label_26.setObjectName("label_26")
    self.gridLayout_17.addWidget(self.label_26, 2, 0, 1, 1)
    self.pfMinWidth = QtWidgets.QDoubleSpinBox(self.page_3)
    self.pfMinWidth.setDecimals(1)
    self.pfMinWidth.setObjectName("pfMinWidth")
    self.gridLayout_17.addWidget(self.pfMinWidth, 2, 1, 1, 1)
    self.label_25 = QtWidgets.QLabel(self.page_3)
    self.label_25.setObjectName("label_25")
    self.gridLayout_17.addWidget(self.label_25, 3, 0, 1, 1)
    self.pfMaxWidth = QtWidgets.QDoubleSpinBox(self.page_3)
    self.pfMaxWidth.setDecimals(1)
    self.pfMaxWidth.setMaximum(500.0)
    self.pfMaxWidth.setProperty("value", 100.0)
    self.pfMaxWidth.setObjectName("pfMaxWidth")
    self.gridLayout_17.addWidget(self.pfMaxWidth, 3, 1, 1, 1)
    self.label_23 = QtWidgets.QLabel(self.page_3)
    self.label_23.setObjectName("label_23")
    self.gridLayout_17.addWidget(self.label_23, 4, 0, 1, 1)
    self.pfRidgeLength = QtWidgets.QSpinBox(self.page_3)
    self.pfRidgeLength.setProperty("value", 15)
    self.pfRidgeLength.setObjectName("pfRidgeLength")
    self.gridLayout_17.addWidget(self.pfRidgeLength, 4, 1, 1, 1)
    self.pushButton = QtWidgets.QPushButton(self.page_3)
    self.pushButton.setObjectName("pushButton")
    self.gridLayout_17.addWidget(self.pushButton, 5, 0, 1, 1)
    self.pushButton.raise_()
    self.label_24.raise_()
    self.pfSNR.raise_()
    self.pfMinWidth.raise_()
    self.label_23.raise_()
    self.label_29.raise_()
    self.label_25.raise_()
    self.pfMaxWidth.raise_()
    self.label_26.raise_()
    self.pfRidgeLength.raise_()
    self.toolBox.addItem(self.page_3, "")
    self.verticalLayout_5.addWidget(self.toolBox)
    self.line = QtWidgets.QFrame(self.leftEntries)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
    self.line.setSizePolicy(sizePolicy)
    self.line.setFrameShape(QtWidgets.QFrame.HLine)
    self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
    self.line.setObjectName("line")
    self.verticalLayout_5.addWidget(self.line)
    self.groupBox_2 = QtWidgets.QGroupBox(self.leftEntries)
    self.groupBox_2.setFlat(True)
    self.groupBox_2.setObjectName("groupBox_2")
    self.gridLayout_16 = QtWidgets.QGridLayout(self.groupBox_2)
    self.gridLayout_16.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_16.setSpacing(1)
    self.gridLayout_16.setObjectName("gridLayout_16")
    self.xLamda = QtWidgets.QCheckBox(self.groupBox_2)
    self.xLamda.setObjectName("xLamda")
    self.gridLayout_16.addWidget(self.xLamda, 4, 1, 1, 1)
    self.tthPhi = QtWidgets.QCheckBox(self.groupBox_2)
    self.tthPhi.setObjectName("tthPhi")
    self.gridLayout_16.addWidget(self.tthPhi, 5, 1, 1, 1)
    self.show_colorbars = QtWidgets.QCheckBox(self.groupBox_2)
    self.show_colorbars.setObjectName("show_colorbars")
    self.gridLayout_16.addWidget(self.show_colorbars, 2, 0, 1, 1)
    self.normalizeXTof = QtWidgets.QCheckBox(self.groupBox_2)
    self.normalizeXTof.setObjectName("normalizeXTof")
    self.gridLayout_16.addWidget(self.normalizeXTof, 5, 0, 1, 1)
    self.logarithmic_colorscale = QtWidgets.QCheckBox(self.groupBox_2)
    self.logarithmic_colorscale.setChecked(True)
    self.logarithmic_colorscale.setObjectName("logarithmic_colorscale")
    self.gridLayout_16.addWidget(self.logarithmic_colorscale, 3, 0, 1, 1)
    self.logarithmic_y = QtWidgets.QCheckBox(self.groupBox_2)
    self.logarithmic_y.setChecked(True)
    self.logarithmic_y.setObjectName("logarithmic_y")
    self.gridLayout_16.addWidget(self.logarithmic_y, 3, 1, 1, 1)
    self.color_selector = QtWidgets.QComboBox(self.groupBox_2)
    self.color_selector.setObjectName("color_selector")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.color_selector.addItem("")
    self.gridLayout_16.addWidget(self.color_selector, 2, 1, 1, 1)
    self.hide_plots = QtWidgets.QCheckBox(self.groupBox_2)
    self.hide_plots.setObjectName("hide_plots")
    self.gridLayout_16.addWidget(self.hide_plots, 4, 0, 1, 1)
    self.xLamda.raise_()
    self.normalizeXTof.raise_()
    self.logarithmic_y.raise_()
    self.show_colorbars.raise_()
    self.tthPhi.raise_()
    self.hide_plots.raise_()
    self.color_selector.raise_()
    self.logarithmic_colorscale.raise_()
    self.verticalLayout_5.addWidget(self.groupBox_2)
    self.plotTab = QtWidgets.QTabWidget(self.mainSplitter)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(2)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.plotTab.sizePolicy().hasHeightForWidth())
    self.plotTab.setSizePolicy(sizePolicy)
    self.plotTab.setDocumentMode(True)
    self.plotTab.setObjectName("plotTab")
    self.Overview_Tab = QtWidgets.QWidget()
    self.Overview_Tab.setObjectName("Overview_Tab")
    self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.Overview_Tab)
    self.verticalLayout_13.setContentsMargins(0, 2, 0, 0)
    self.verticalLayout_13.setObjectName("verticalLayout_13")
    self.currentChannel = QtWidgets.QLabel(self.Overview_Tab)
    self.currentChannel.setAlignment(QtCore.Qt.AlignCenter)
    self.currentChannel.setObjectName("currentChannel")
    self.verticalLayout_13.addWidget(self.currentChannel)
    self.overviewSplitter = QtWidgets.QSplitter(self.Overview_Tab)
    self.overviewSplitter.setOrientation(QtCore.Qt.Vertical)
    self.overviewSplitter.setObjectName("overviewSplitter")
    self.frame = QtWidgets.QFrame(self.overviewSplitter)
    self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame.setObjectName("frame")
    self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame)
    self.horizontalLayout_6.setContentsMargins(2, 2, 2, 2)
    self.horizontalLayout_6.setSpacing(0)
    self.horizontalLayout_6.setObjectName("horizontalLayout_6")
    self.xy_overview = MPLWidget(self.frame)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.xy_overview.sizePolicy().hasHeightForWidth())
    self.xy_overview.setSizePolicy(sizePolicy)
    self.xy_overview.setMinimumSize(QtCore.QSize(0, 150))
    self.xy_overview.setObjectName("xy_overview")
    self.horizontalLayout_6.addWidget(self.xy_overview)
    self.xtof_overview = MPLWidget(self.frame)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.xtof_overview.sizePolicy().hasHeightForWidth())
    self.xtof_overview.setSizePolicy(sizePolicy)
    self.xtof_overview.setMinimumSize(QtCore.QSize(0, 150))
    self.xtof_overview.setObjectName("xtof_overview")
    self.horizontalLayout_6.addWidget(self.xtof_overview)
    self.widget_3 = QtWidgets.QWidget(self.overviewSplitter)
    self.widget_3.setObjectName("widget_3")
    self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.widget_3)
    self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_11.setObjectName("verticalLayout_11")
    self.frame1 = QtWidgets.QFrame(self.widget_3)
    self.frame1.setFrameShape(QtWidgets.QFrame.NoFrame)
    self.frame1.setObjectName("frame1")
    self.horizontalLayout_13 = QtWidgets.QHBoxLayout(self.frame1)
    self.horizontalLayout_13.setContentsMargins(0, 0, 0, 0)
    self.horizontalLayout_13.setObjectName("horizontalLayout_13")
    self.frame_5 = QtWidgets.QFrame(self.frame1)
    self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_5.setObjectName("frame_5")
    self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_5)
    self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_4.setObjectName("gridLayout_4")
    self.label_17 = QtWidgets.QLabel(self.frame_5)
    self.label_17.setAlignment(QtCore.Qt.AlignCenter)
    self.label_17.setObjectName("label_17")
    self.gridLayout_4.addWidget(self.label_17, 0, 0, 1, 1)
    self.label_11 = QtWidgets.QLabel(self.frame_5)
    self.label_11.setAlignment(QtCore.Qt.AlignCenter)
    self.label_11.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_11.setObjectName("label_11")
    self.gridLayout_4.addWidget(self.label_11, 1, 0, 1, 1)
    self.label_15 = QtWidgets.QLabel(self.frame_5)
    self.label_15.setAlignment(QtCore.Qt.AlignCenter)
    self.label_15.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_15.setObjectName("label_15")
    self.gridLayout_4.addWidget(self.label_15, 2, 0, 1, 1)
    self.datasetDirectPixel = QtWidgets.QLabel(self.frame_5)
    self.datasetDirectPixel.setText("")
    self.datasetDirectPixel.setObjectName("datasetDirectPixel")
    self.gridLayout_4.addWidget(self.datasetDirectPixel, 0, 1, 1, 1)
    self.datasetDangle = QtWidgets.QLabel(self.frame_5)
    self.datasetDangle.setText("")
    self.datasetDangle.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetDangle.setObjectName("datasetDangle")
    self.gridLayout_4.addWidget(self.datasetDangle, 1, 1, 1, 1)
    self.datasetDangle0 = QtWidgets.QLabel(self.frame_5)
    self.datasetDangle0.setText("")
    self.datasetDangle0.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetDangle0.setObjectName("datasetDangle0")
    self.gridLayout_4.addWidget(self.datasetDangle0, 2, 1, 1, 1)
    self.horizontalLayout_13.addWidget(self.frame_5)
    self.widget_8 = QtWidgets.QWidget(self.frame1)
    self.widget_8.setObjectName("widget_8")
    self.gridLayout_11 = QtWidgets.QGridLayout(self.widget_8)
    self.gridLayout_11.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_11.setObjectName("gridLayout_11")
    self.label_8 = QtWidgets.QLabel(self.widget_8)
    self.label_8.setAlignment(QtCore.Qt.AlignCenter)
    self.label_8.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_8.setObjectName("label_8")
    self.gridLayout_11.addWidget(self.label_8, 1, 0, 1, 1)
    self.frame_6 = QtWidgets.QFrame(self.widget_8)
    self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_6.setObjectName("frame_6")
    self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_6)
    self.gridLayout_9.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_9.setObjectName("gridLayout_9")
    self.label_12 = QtWidgets.QLabel(self.frame_6)
    self.label_12.setAlignment(QtCore.Qt.AlignCenter)
    self.label_12.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_12.setObjectName("label_12")
    self.gridLayout_9.addWidget(self.label_12, 0, 0, 1, 1)
    self.datasetSangle = QtWidgets.QLabel(self.frame_6)
    self.datasetSangle.setText("")
    self.datasetSangle.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetSangle.setObjectName("datasetSangle")
    self.gridLayout_9.addWidget(self.datasetSangle, 0, 1, 1, 1)
    self.label_13 = QtWidgets.QLabel(self.frame_6)
    self.label_13.setAlignment(QtCore.Qt.AlignCenter)
    self.label_13.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_13.setObjectName("label_13")
    self.gridLayout_9.addWidget(self.label_13, 1, 0, 1, 1)
    self.datasetAi = QtWidgets.QLabel(self.frame_6)
    self.datasetAi.setText("")
    self.datasetAi.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetAi.setObjectName("datasetAi")
    self.gridLayout_9.addWidget(self.datasetAi, 1, 1, 1, 1)
    self.gridLayout_11.addWidget(self.frame_6, 3, 0, 1, 2)
    self.datasetLambda = QtWidgets.QLabel(self.widget_8)
    self.datasetLambda.setText("")
    self.datasetLambda.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetLambda.setObjectName("datasetLambda")
    self.gridLayout_11.addWidget(self.datasetLambda, 1, 1, 1, 1)
    self.label_9 = QtWidgets.QLabel(self.widget_8)
    self.label_9.setAlignment(QtCore.Qt.AlignCenter)
    self.label_9.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_9.setObjectName("label_9")
    self.gridLayout_11.addWidget(self.label_9, 2, 0, 1, 1)
    self.datasetPCharge = QtWidgets.QLabel(self.widget_8)
    self.datasetPCharge.setText("")
    self.datasetPCharge.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetPCharge.setObjectName("datasetPCharge")
    self.gridLayout_11.addWidget(self.datasetPCharge, 2, 1, 1, 1)
    self.horizontalLayout_13.addWidget(self.widget_8)
    self.widget_7 = QtWidgets.QWidget(self.frame1)
    self.widget_7.setObjectName("widget_7")
    self.gridLayout_10 = QtWidgets.QGridLayout(self.widget_7)
    self.gridLayout_10.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_10.setObjectName("gridLayout_10")
    self.label_10 = QtWidgets.QLabel(self.widget_7)
    self.label_10.setAlignment(QtCore.Qt.AlignCenter)
    self.label_10.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_10.setObjectName("label_10")
    self.gridLayout_10.addWidget(self.label_10, 2, 0, 1, 1)
    self.datasetTotCounts = QtWidgets.QLabel(self.widget_7)
    self.datasetTotCounts.setText("")
    self.datasetTotCounts.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetTotCounts.setObjectName("datasetTotCounts")
    self.gridLayout_10.addWidget(self.datasetTotCounts, 2, 1, 1, 1)
    self.datasetRate = QtWidgets.QLabel(self.widget_7)
    self.datasetRate.setText("")
    self.datasetRate.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetRate.setObjectName("datasetRate")
    self.gridLayout_10.addWidget(self.datasetRate, 3, 1, 1, 1)
    self.datasetTime = QtWidgets.QLabel(self.widget_7)
    self.datasetTime.setText("")
    self.datasetTime.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetTime.setObjectName("datasetTime")
    self.gridLayout_10.addWidget(self.datasetTime, 1, 1, 1, 1)
    self.label_6 = QtWidgets.QLabel(self.widget_7)
    self.label_6.setAlignment(QtCore.Qt.AlignCenter)
    self.label_6.setObjectName("label_6")
    self.gridLayout_10.addWidget(self.label_6, 1, 0, 1, 1)
    self.label_37 = QtWidgets.QLabel(self.widget_7)
    self.label_37.setAlignment(QtCore.Qt.AlignCenter)
    self.label_37.setObjectName("label_37")
    self.gridLayout_10.addWidget(self.label_37, 3, 0, 1, 1)
    self.datasetROI = QtWidgets.QLabel(self.widget_7)
    self.datasetROI.setText("")
    self.datasetROI.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.datasetROI.setObjectName("datasetROI")
    self.gridLayout_10.addWidget(self.datasetROI, 4, 1, 1, 1)
    self.label_14 = QtWidgets.QLabel(self.widget_7)
    self.label_14.setAlignment(QtCore.Qt.AlignCenter)
    self.label_14.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
    self.label_14.setObjectName("label_14")
    self.gridLayout_10.addWidget(self.label_14, 4, 0, 1, 1)
    self.horizontalLayout_13.addWidget(self.widget_7)
    self.verticalLayout_11.addWidget(self.frame1)
    self.frame_2 = QtWidgets.QFrame(self.widget_3)
    self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_2.setObjectName("frame_2")
    self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_2)
    self.verticalLayout_12.setContentsMargins(2, 2, 2, 2)
    self.verticalLayout_12.setSpacing(0)
    self.verticalLayout_12.setObjectName("verticalLayout_12")
    self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_7.setContentsMargins(4, -1, 4, -1)
    self.horizontalLayout_7.setObjectName("horizontalLayout_7")
    self.label_7 = QtWidgets.QLabel(self.frame_2)
    self.label_7.setObjectName("label_7")
    self.horizontalLayout_7.addWidget(self.label_7)
    self.normalizationLabel = QtWidgets.QLabel(self.frame_2)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(2)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.normalizationLabel.sizePolicy().hasHeightForWidth())
    self.normalizationLabel.setSizePolicy(sizePolicy)
    self.normalizationLabel.setAlignment(QtCore.Qt.AlignCenter)
    self.normalizationLabel.setObjectName("normalizationLabel")
    self.horizontalLayout_7.addWidget(self.normalizationLabel)
    self.gridLayout_7 = QtWidgets.QGridLayout()
    self.gridLayout_7.setObjectName("gridLayout_7")
    self.selectedChannel0 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel0.setChecked(True)
    self.selectedChannel0.setObjectName("selectedChannel0")
    self.gridLayout_7.addWidget(self.selectedChannel0, 0, 0, 1, 1)
    self.selectedChannel5 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel5.setObjectName("selectedChannel5")
    self.gridLayout_7.addWidget(self.selectedChannel5, 1, 1, 1, 1)
    self.selectedChannel7 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel7.setObjectName("selectedChannel7")
    self.gridLayout_7.addWidget(self.selectedChannel7, 1, 3, 1, 1)
    self.selectedChannel1 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel1.setObjectName("selectedChannel1")
    self.gridLayout_7.addWidget(self.selectedChannel1, 0, 1, 1, 1)
    self.selectedChannel4 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel4.setObjectName("selectedChannel4")
    self.gridLayout_7.addWidget(self.selectedChannel4, 1, 0, 1, 1)
    self.selectedChannel2 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel2.setObjectName("selectedChannel2")
    self.gridLayout_7.addWidget(self.selectedChannel2, 0, 2, 1, 1)
    self.selectedChannel3 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel3.setObjectName("selectedChannel3")
    self.gridLayout_7.addWidget(self.selectedChannel3, 0, 3, 1, 1)
    self.selectedChannel6 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel6.setObjectName("selectedChannel6")
    self.gridLayout_7.addWidget(self.selectedChannel6, 1, 2, 1, 1)
    self.selectedChannel8 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel8.setObjectName("selectedChannel8")
    self.gridLayout_7.addWidget(self.selectedChannel8, 2, 0, 1, 1)
    self.selectedChannel9 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel9.setObjectName("selectedChannel9")
    self.gridLayout_7.addWidget(self.selectedChannel9, 2, 1, 1, 1)
    self.selectedChannel10 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel10.setObjectName("selectedChannel10")
    self.gridLayout_7.addWidget(self.selectedChannel10, 2, 2, 1, 1)
    self.selectedChannel11 = QtWidgets.QRadioButton(self.frame_2)
    self.selectedChannel11.setObjectName("selectedChannel11")
    self.gridLayout_7.addWidget(self.selectedChannel11, 2, 3, 1, 1)
    self.horizontalLayout_7.addLayout(self.gridLayout_7)
    self.verticalLayout_12.addLayout(self.horizontalLayout_7)
    self.tabWidget = QtWidgets.QTabWidget(self.frame_2)
    self.tabWidget.setObjectName("tabWidget")
    self.tab = QtWidgets.QWidget()
    self.tab.setObjectName("tab")
    self.verticalLayout_16 = QtWidgets.QVBoxLayout(self.tab)
    self.verticalLayout_16.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_16.setObjectName("verticalLayout_16")
    self.reductionTable = QtWidgets.QTableWidget(self.tab)
    self.reductionTable.setEditTriggers(QtWidgets.QAbstractItemView.AnyKeyPressed|QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed)
    self.reductionTable.setProperty("showDropIndicator", False)
    self.reductionTable.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
    self.reductionTable.setWordWrap(False)
    self.reductionTable.setRowCount(0)
    self.reductionTable.setObjectName("reductionTable")
    self.reductionTable.setColumnCount(13)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(0, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(1, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(2, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(3, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(4, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(5, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(6, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(7, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(8, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(9, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(10, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(11, item)
    item = QtWidgets.QTableWidgetItem()
    self.reductionTable.setHorizontalHeaderItem(12, item)
    self.reductionTable.horizontalHeader().setVisible(True)
    self.reductionTable.horizontalHeader().setDefaultSectionSize(50)
    self.reductionTable.horizontalHeader().setMinimumSectionSize(25)
    self.reductionTable.verticalHeader().setVisible(False)
    self.reductionTable.verticalHeader().setDefaultSectionSize(20)
    self.verticalLayout_16.addWidget(self.reductionTable)
    self.tabWidget.addTab(self.tab, "")
    self.tab_2 = QtWidgets.QWidget()
    self.tab_2.setObjectName("tab_2")
    self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.tab_2)
    self.verticalLayout_17.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_17.setObjectName("verticalLayout_17")
    self.normalizeTable = QtWidgets.QTableWidget(self.tab_2)
    self.normalizeTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
    self.normalizeTable.setObjectName("normalizeTable")
    self.normalizeTable.setColumnCount(8)
    self.normalizeTable.setRowCount(0)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(0, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(1, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(2, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(3, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(4, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(5, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(6, item)
    item = QtWidgets.QTableWidgetItem()
    self.normalizeTable.setHorizontalHeaderItem(7, item)
    self.normalizeTable.horizontalHeader().setDefaultSectionSize(50)
    self.normalizeTable.horizontalHeader().setMinimumSectionSize(25)
    self.normalizeTable.verticalHeader().setVisible(False)
    self.normalizeTable.verticalHeader().setDefaultSectionSize(20)
    self.verticalLayout_17.addWidget(self.normalizeTable)
    self.tabWidget.addTab(self.tab_2, "")
    self.verticalLayout_12.addWidget(self.tabWidget)
    self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_5.setObjectName("horizontalLayout_5")
    self.reduceButton = QtWidgets.QPushButton(self.frame_2)
    self.reduceButton.setObjectName("reduceButton")
    self.horizontalLayout_5.addWidget(self.reduceButton)
    self.reduceLastButton = QtWidgets.QPushButton(self.frame_2)
    self.reduceLastButton.setObjectName("reduceLastButton")
    self.horizontalLayout_5.addWidget(self.reduceLastButton)
    self.verticalLayout_12.addLayout(self.horizontalLayout_5)
    self.verticalLayout_11.addWidget(self.frame_2)
    self.verticalLayout_13.addWidget(self.overviewSplitter)
    self.plotTab.addTab(self.Overview_Tab, "")
    self.XY_Tab = QtWidgets.QWidget()
    self.XY_Tab.setObjectName("XY_Tab")
    self.gridLayout = QtWidgets.QGridLayout(self.XY_Tab)
    self.gridLayout.setContentsMargins(0, 0, 0, 0)
    self.gridLayout.setSpacing(0)
    self.gridLayout.setObjectName("gridLayout")
    self.frame_xy_pp = PersistentFrame(self.XY_Tab)
    self.frame_xy_pp.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xy_pp.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xy_pp.setObjectName("frame_xy_pp")
    self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_xy_pp)
    self.verticalLayout_3.setObjectName("verticalLayout_3")
    self.xy_pp = MPLWidget(self.frame_xy_pp)
    self.xy_pp.setMinimumSize(QtCore.QSize(150, 150))
    self.xy_pp.setObjectName("xy_pp")
    self.verticalLayout_3.addWidget(self.xy_pp)
    self.gridLayout.addWidget(self.frame_xy_pp, 0, 0, 1, 1)
    self.frame_xy_mm = PersistentFrame(self.XY_Tab)
    self.frame_xy_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xy_mm.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xy_mm.setObjectName("frame_xy_mm")
    self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_xy_mm)
    self.verticalLayout_4.setObjectName("verticalLayout_4")
    self.xy_mm = MPLWidget(self.frame_xy_mm)
    self.xy_mm.setMinimumSize(QtCore.QSize(150, 150))
    self.xy_mm.setObjectName("xy_mm")
    self.verticalLayout_4.addWidget(self.xy_mm)
    self.gridLayout.addWidget(self.frame_xy_mm, 0, 1, 1, 1)
    self.frame_xy_sf = PersistentFrame(self.XY_Tab)
    self.frame_xy_sf.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xy_sf.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xy_sf.setObjectName("frame_xy_sf")
    self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_xy_sf)
    self.horizontalLayout.setObjectName("horizontalLayout")
    self.xy_pm = MPLWidget(self.frame_xy_sf)
    self.xy_pm.setMinimumSize(QtCore.QSize(150, 150))
    self.xy_pm.setObjectName("xy_pm")
    self.horizontalLayout.addWidget(self.xy_pm)
    self.xy_mp = MPLWidget(self.frame_xy_sf)
    self.xy_mp.setMinimumSize(QtCore.QSize(150, 105))
    self.xy_mp.setObjectName("xy_mp")
    self.horizontalLayout.addWidget(self.xy_mp)
    self.gridLayout.addWidget(self.frame_xy_sf, 1, 0, 1, 2)
    self.plotTab.addTab(self.XY_Tab, "")
    self.XTof_Tab = QtWidgets.QWidget()
    self.XTof_Tab.setObjectName("XTof_Tab")
    self.gridLayout_2 = QtWidgets.QGridLayout(self.XTof_Tab)
    self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_2.setSpacing(0)
    self.gridLayout_2.setObjectName("gridLayout_2")
    self.frame_xtof_pp = PersistentFrame(self.XTof_Tab)
    self.frame_xtof_pp.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xtof_pp.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xtof_pp.setObjectName("frame_xtof_pp")
    self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.frame_xtof_pp)
    self.verticalLayout_7.setObjectName("verticalLayout_7")
    self.xtof_pp = MPLWidget(self.frame_xtof_pp)
    self.xtof_pp.setObjectName("xtof_pp")
    self.verticalLayout_7.addWidget(self.xtof_pp)
    self.gridLayout_2.addWidget(self.frame_xtof_pp, 0, 0, 1, 1)
    self.frame_xtof_mm = PersistentFrame(self.XTof_Tab)
    self.frame_xtof_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xtof_mm.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xtof_mm.setObjectName("frame_xtof_mm")
    self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_xtof_mm)
    self.verticalLayout_8.setObjectName("verticalLayout_8")
    self.xtof_mm = MPLWidget(self.frame_xtof_mm)
    self.xtof_mm.setObjectName("xtof_mm")
    self.verticalLayout_8.addWidget(self.xtof_mm)
    self.gridLayout_2.addWidget(self.frame_xtof_mm, 0, 1, 1, 1)
    self.frame_xtof_sf = PersistentFrame(self.XTof_Tab)
    self.frame_xtof_sf.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_xtof_sf.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_xtof_sf.setObjectName("frame_xtof_sf")
    self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_xtof_sf)
    self.horizontalLayout_2.setObjectName("horizontalLayout_2")
    self.xtof_pm = MPLWidget(self.frame_xtof_sf)
    self.xtof_pm.setObjectName("xtof_pm")
    self.horizontalLayout_2.addWidget(self.xtof_pm)
    self.xtof_mp = MPLWidget(self.frame_xtof_sf)
    self.xtof_mp.setObjectName("xtof_mp")
    self.horizontalLayout_2.addWidget(self.xtof_mp)
    self.gridLayout_2.addWidget(self.frame_xtof_sf, 1, 0, 1, 2)
    self.plotTab.addTab(self.XTof_Tab, "")
    self.OffSpec_Tab = QtWidgets.QWidget()
    self.OffSpec_Tab.setObjectName("OffSpec_Tab")
    self.gridLayout_5 = QtWidgets.QGridLayout(self.OffSpec_Tab)
    self.gridLayout_5.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_5.setSpacing(0)
    self.gridLayout_5.setObjectName("gridLayout_5")
    self.frame_4 = QtWidgets.QFrame(self.OffSpec_Tab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.frame_4.sizePolicy().hasHeightForWidth())
    self.frame_4.setSizePolicy(sizePolicy)
    self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_4.setObjectName("frame_4")
    self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.frame_4)
    self.verticalLayout_15.setObjectName("verticalLayout_15")
    self.offspec_mm = MPLWidget(self.frame_4)
    self.offspec_mm.setObjectName("offspec_mm")
    self.verticalLayout_15.addWidget(self.offspec_mm)
    self.gridLayout_5.addWidget(self.frame_4, 2, 1, 1, 1)
    self.frame_21 = QtWidgets.QFrame(self.OffSpec_Tab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.frame_21.sizePolicy().hasHeightForWidth())
    self.frame_21.setSizePolicy(sizePolicy)
    self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_21.setObjectName("frame_21")
    self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_21)
    self.horizontalLayout_3.setObjectName("horizontalLayout_3")
    self.offspec_pm = MPLWidget(self.frame_21)
    self.offspec_pm.setObjectName("offspec_pm")
    self.horizontalLayout_3.addWidget(self.offspec_pm)
    self.offspec_mp = MPLWidget(self.frame_21)
    self.offspec_mp.setObjectName("offspec_mp")
    self.horizontalLayout_3.addWidget(self.offspec_mp)
    self.gridLayout_5.addWidget(self.frame_21, 3, 0, 1, 2)
    self.frame_3 = QtWidgets.QFrame(self.OffSpec_Tab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
    self.frame_3.setSizePolicy(sizePolicy)
    self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_3.setObjectName("frame_3")
    self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.frame_3)
    self.verticalLayout_14.setObjectName("verticalLayout_14")
    self.offspec_pp = MPLWidget(self.frame_3)
    self.offspec_pp.setObjectName("offspec_pp")
    self.verticalLayout_14.addWidget(self.offspec_pp)
    self.gridLayout_5.addWidget(self.frame_3, 2, 0, 1, 1)
    self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_8.setObjectName("horizontalLayout_8")
    self.kizmkfzVSqz = QtWidgets.QRadioButton(self.OffSpec_Tab)
    self.kizmkfzVSqz.setChecked(True)
    self.kizmkfzVSqz.setObjectName("kizmkfzVSqz")
    self.horizontalLayout_8.addWidget(self.kizmkfzVSqz)
    self.qxVSqz = QtWidgets.QRadioButton(self.OffSpec_Tab)
    self.qxVSqz.setObjectName("qxVSqz")
    self.horizontalLayout_8.addWidget(self.qxVSqz)
    self.kizVSkfz = QtWidgets.QRadioButton(self.OffSpec_Tab)
    self.kizVSkfz.setObjectName("kizVSkfz")
    self.horizontalLayout_8.addWidget(self.kizVSkfz)
    self.gridLayout_5.addLayout(self.horizontalLayout_8, 0, 0, 1, 2)
    self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_9.setObjectName("horizontalLayout_9")
    self.label_21 = QtWidgets.QLabel(self.OffSpec_Tab)
    self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
    self.label_21.setObjectName("label_21")
    self.horizontalLayout_9.addWidget(self.label_21)
    self.offspecImin = QtWidgets.QDoubleSpinBox(self.OffSpec_Tab)
    self.offspecImin.setDecimals(2)
    self.offspecImin.setMinimum(-20.0)
    self.offspecImin.setMaximum(2.0)
    self.offspecImin.setSingleStep(0.25)
    self.offspecImin.setProperty("value", -6.0)
    self.offspecImin.setObjectName("offspecImin")
    self.horizontalLayout_9.addWidget(self.offspecImin)
    self.clipOffspec = QtWidgets.QPushButton(self.OffSpec_Tab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.clipOffspec.sizePolicy().hasHeightForWidth())
    self.clipOffspec.setSizePolicy(sizePolicy)
    self.clipOffspec.setObjectName("clipOffspec")
    self.horizontalLayout_9.addWidget(self.clipOffspec)
    self.label_22 = QtWidgets.QLabel(self.OffSpec_Tab)
    self.label_22.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
    self.label_22.setObjectName("label_22")
    self.horizontalLayout_9.addWidget(self.label_22)
    self.offspecImax = QtWidgets.QDoubleSpinBox(self.OffSpec_Tab)
    self.offspecImax.setMinimum(-10.0)
    self.offspecImax.setMaximum(10.0)
    self.offspecImax.setSingleStep(0.25)
    self.offspecImax.setObjectName("offspecImax")
    self.horizontalLayout_9.addWidget(self.offspecImax)
    self.gridLayout_5.addLayout(self.horizontalLayout_9, 1, 0, 1, 2)
    self.plotTab.addTab(self.OffSpec_Tab, "")
    self.gisansTab = QtWidgets.QWidget()
    self.gisansTab.setObjectName("gisansTab")
    self.gridLayout_13 = QtWidgets.QGridLayout(self.gisansTab)
    self.gridLayout_13.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_13.setSpacing(0)
    self.gridLayout_13.setObjectName("gridLayout_13")
    self.frame_gisans_pp = PersistentFrame(self.gisansTab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(1)
    sizePolicy.setHeightForWidth(self.frame_gisans_pp.sizePolicy().hasHeightForWidth())
    self.frame_gisans_pp.setSizePolicy(sizePolicy)
    self.frame_gisans_pp.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_gisans_pp.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_gisans_pp.setObjectName("frame_gisans_pp")
    self.verticalLayout_20 = QtWidgets.QVBoxLayout(self.frame_gisans_pp)
    self.verticalLayout_20.setObjectName("verticalLayout_20")
    self.gisans_pp = MPLWidget(self.frame_gisans_pp)
    self.gisans_pp.setMinimumSize(QtCore.QSize(150, 150))
    self.gisans_pp.setObjectName("gisans_pp")
    self.verticalLayout_20.addWidget(self.gisans_pp)
    self.gridLayout_13.addWidget(self.frame_gisans_pp, 1, 0, 1, 1)
    self.frame_gisans_mm = PersistentFrame(self.gisansTab)
    self.frame_gisans_mm.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_gisans_mm.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_gisans_mm.setObjectName("frame_gisans_mm")
    self.verticalLayout_21 = QtWidgets.QVBoxLayout(self.frame_gisans_mm)
    self.verticalLayout_21.setObjectName("verticalLayout_21")
    self.gisans_mm = MPLWidget(self.frame_gisans_mm)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(1)
    sizePolicy.setHeightForWidth(self.gisans_mm.sizePolicy().hasHeightForWidth())
    self.gisans_mm.setSizePolicy(sizePolicy)
    self.gisans_mm.setMinimumSize(QtCore.QSize(150, 150))
    self.gisans_mm.setObjectName("gisans_mm")
    self.verticalLayout_21.addWidget(self.gisans_mm)
    self.gridLayout_13.addWidget(self.frame_gisans_mm, 1, 1, 1, 1)
    self.frame_gisans_sf = PersistentFrame(self.gisansTab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(1)
    sizePolicy.setHeightForWidth(self.frame_gisans_sf.sizePolicy().hasHeightForWidth())
    self.frame_gisans_sf.setSizePolicy(sizePolicy)
    self.frame_gisans_sf.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.frame_gisans_sf.setFrameShadow(QtWidgets.QFrame.Raised)
    self.frame_gisans_sf.setObjectName("frame_gisans_sf")
    self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_gisans_sf)
    self.horizontalLayout_4.setObjectName("horizontalLayout_4")
    self.gisans_pm = MPLWidget(self.frame_gisans_sf)
    self.gisans_pm.setMinimumSize(QtCore.QSize(150, 150))
    self.gisans_pm.setObjectName("gisans_pm")
    self.horizontalLayout_4.addWidget(self.gisans_pm)
    self.gisans_mp = MPLWidget(self.frame_gisans_sf)
    self.gisans_mp.setMinimumSize(QtCore.QSize(150, 105))
    self.gisans_mp.setObjectName("gisans_mp")
    self.horizontalLayout_4.addWidget(self.gisans_mp)
    self.gridLayout_13.addWidget(self.frame_gisans_sf, 2, 0, 1, 2)
    self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
    self.horizontalLayout_14.setObjectName("horizontalLayout_14")
    self.label_16 = QtWidgets.QLabel(self.gisansTab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
    self.label_16.setSizePolicy(sizePolicy)
    self.label_16.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
    self.label_16.setObjectName("label_16")
    self.horizontalLayout_14.addWidget(self.label_16)
    self.gisansImin = QtWidgets.QDoubleSpinBox(self.gisansTab)
    self.gisansImin.setMinimum(-20.0)
    self.gisansImin.setMaximum(2.0)
    self.gisansImin.setSingleStep(0.25)
    self.gisansImin.setProperty("value", -6.0)
    self.gisansImin.setObjectName("gisansImin")
    self.horizontalLayout_14.addWidget(self.gisansImin)
    self.label_32 = QtWidgets.QLabel(self.gisansTab)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_32.sizePolicy().hasHeightForWidth())
    self.label_32.setSizePolicy(sizePolicy)
    self.label_32.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
    self.label_32.setObjectName("label_32")
    self.horizontalLayout_14.addWidget(self.label_32)
    self.gisansImax = QtWidgets.QDoubleSpinBox(self.gisansTab)
    self.gisansImax.setMinimum(-20.0)
    self.gisansImax.setMaximum(2.0)
    self.gisansImax.setSingleStep(0.25)
    self.gisansImax.setObjectName("gisansImax")
    self.horizontalLayout_14.addWidget(self.gisansImax)
    self.gridLayout_13.addLayout(self.horizontalLayout_14, 0, 0, 1, 2)
    self.plotTab.addTab(self.gisansTab, "")
    self.daslogTab = QtWidgets.QWidget()
    self.daslogTab.setObjectName("daslogTab")
    self.gridLayout_8 = QtWidgets.QGridLayout(self.daslogTab)
    self.gridLayout_8.setContentsMargins(0, 0, 0, 0)
    self.gridLayout_8.setSpacing(0)
    self.gridLayout_8.setObjectName("gridLayout_8")
    self.daslogBox = QtWidgets.QGroupBox(self.daslogTab)
    self.daslogBox.setObjectName("daslogBox")
    self.verticalLayout_19 = QtWidgets.QVBoxLayout(self.daslogBox)
    self.verticalLayout_19.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_19.setObjectName("verticalLayout_19")
    self.daslogTableBox = QtWidgets.QTableWidget(self.daslogBox)
    self.daslogTableBox.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
    self.daslogTableBox.setProperty("showDropIndicator", False)
    self.daslogTableBox.setAlternatingRowColors(True)
    self.daslogTableBox.setObjectName("daslogTableBox")
    self.daslogTableBox.setColumnCount(3)
    self.daslogTableBox.setRowCount(0)
    item = QtWidgets.QTableWidgetItem()
    self.daslogTableBox.setHorizontalHeaderItem(0, item)
    item = QtWidgets.QTableWidgetItem()
    self.daslogTableBox.setHorizontalHeaderItem(1, item)
    item = QtWidgets.QTableWidgetItem()
    self.daslogTableBox.setHorizontalHeaderItem(2, item)
    self.daslogTableBox.verticalHeader().setVisible(False)
    self.daslogTableBox.verticalHeader().setDefaultSectionSize(25)
    self.verticalLayout_19.addWidget(self.daslogTableBox)
    self.gridLayout_8.addWidget(self.daslogBox, 0, 0, 1, 1)
    self.plotTab.addTab(self.daslogTab, "")
    self.compareTab = QtWidgets.QWidget()
    self.compareTab.setObjectName("compareTab")
    self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.compareTab)
    self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_9.setObjectName("verticalLayout_9")
    self.widget_5 = CompareWidget(self.compareTab)
    self.widget_5.setObjectName("widget_5")
    self.verticalLayout_9.addWidget(self.widget_5)
    self.plotTab.addTab(self.compareTab, "")
    self.rightPlots = QtWidgets.QFrame(self.mainSplitter)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(1)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.rightPlots.sizePolicy().hasHeightForWidth())
    self.rightPlots.setSizePolicy(sizePolicy)
    self.rightPlots.setFrameShape(QtWidgets.QFrame.StyledPanel)
    self.rightPlots.setFrameShadow(QtWidgets.QFrame.Raised)
    self.rightPlots.setObjectName("rightPlots")
    self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.rightPlots)
    self.verticalLayout_2.setContentsMargins(2, 2, 2, 2)
    self.verticalLayout_2.setObjectName("verticalLayout_2")
    self.plotSplitter = QtWidgets.QSplitter(self.rightPlots)
    self.plotSplitter.setOrientation(QtCore.Qt.Vertical)
    self.plotSplitter.setChildrenCollapsible(False)
    self.plotSplitter.setObjectName("plotSplitter")
    self.widget_4 = QtWidgets.QWidget(self.plotSplitter)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(2)
    sizePolicy.setHeightForWidth(self.widget_4.sizePolicy().hasHeightForWidth())
    self.widget_4.setSizePolicy(sizePolicy)
    self.widget_4.setObjectName("widget_4")
    self.verticalLayout_24 = QtWidgets.QVBoxLayout(self.widget_4)
    self.verticalLayout_24.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_24.setObjectName("verticalLayout_24")
    self.label_35 = QtWidgets.QLabel(self.widget_4)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_35.sizePolicy().hasHeightForWidth())
    self.label_35.setSizePolicy(sizePolicy)
    self.label_35.setAlignment(QtCore.Qt.AlignCenter)
    self.label_35.setObjectName("label_35")
    self.verticalLayout_24.addWidget(self.label_35)
    self.x_project = MPLWidget(self.widget_4)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.x_project.sizePolicy().hasHeightForWidth())
    self.x_project.setSizePolicy(sizePolicy)
    self.x_project.setMinimumSize(QtCore.QSize(150, 150))
    self.x_project.setObjectName("x_project")
    self.verticalLayout_24.addWidget(self.x_project)
    self.widget_2 = QtWidgets.QWidget(self.plotSplitter)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(1)
    sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
    self.widget_2.setSizePolicy(sizePolicy)
    self.widget_2.setObjectName("widget_2")
    self.verticalLayout_23 = QtWidgets.QVBoxLayout(self.widget_2)
    self.verticalLayout_23.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_23.setObjectName("verticalLayout_23")
    self.label_34 = QtWidgets.QLabel(self.widget_2)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_34.sizePolicy().hasHeightForWidth())
    self.label_34.setSizePolicy(sizePolicy)
    self.label_34.setAlignment(QtCore.Qt.AlignCenter)
    self.label_34.setObjectName("label_34")
    self.verticalLayout_23.addWidget(self.label_34)
    self.y_project = MPLWidget(self.widget_2)
    self.y_project.setMinimumSize(QtCore.QSize(150, 150))
    self.y_project.setObjectName("y_project")
    self.verticalLayout_23.addWidget(self.y_project)
    self.widget = QtWidgets.QWidget(self.plotSplitter)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(3)
    sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
    self.widget.setSizePolicy(sizePolicy)
    self.widget.setObjectName("widget")
    self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.widget)
    self.verticalLayout_22.setContentsMargins(0, 0, 0, 0)
    self.verticalLayout_22.setObjectName("verticalLayout_22")
    self.label_33 = QtWidgets.QLabel(self.widget)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.label_33.sizePolicy().hasHeightForWidth())
    self.label_33.setSizePolicy(sizePolicy)
    self.label_33.setAlignment(QtCore.Qt.AlignCenter)
    self.label_33.setObjectName("label_33")
    self.verticalLayout_22.addWidget(self.label_33)
    self.refl = MPLWidget(self.widget)
    sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
    sizePolicy.setHorizontalStretch(0)
    sizePolicy.setVerticalStretch(0)
    sizePolicy.setHeightForWidth(self.refl.sizePolicy().hasHeightForWidth())
    self.refl.setSizePolicy(sizePolicy)
    self.refl.setMinimumSize(QtCore.QSize(150, 150))
    self.refl.setObjectName("refl")
    self.verticalLayout_22.addWidget(self.refl)
    self.verticalLayout_2.addWidget(self.plotSplitter)
    self.verticalLayout_6.addWidget(self.mainSplitter)
    MainWindow.setCentralWidget(self.centralwidget)
    self.menubar = QtWidgets.QMenuBar(MainWindow)
    self.menubar.setGeometry(QtCore.QRect(0, 0, 990, 25))
    self.menubar.setObjectName("menubar")
    self.menuFile = QtWidgets.QMenu(self.menubar)
    self.menuFile.setObjectName("menuFile")
    self.menuAdvanced = QtWidgets.QMenu(self.menubar)
    self.menuAdvanced.setObjectName("menuAdvanced")
    self.menuDebug = QtWidgets.QMenu(self.menuAdvanced)
    self.menuDebug.setObjectName("menuDebug")
    self.menuHelp = QtWidgets.QMenu(self.menubar)
    self.menuHelp.setObjectName("menuHelp")
    self.menuReduction = QtWidgets.QMenu(self.menubar)
    self.menuReduction.setObjectName("menuReduction")
    self.menuAutomatics = QtWidgets.QMenu(self.menubar)
    self.menuAutomatics.setObjectName("menuAutomatics")
    self.menuTools = QtWidgets.QMenu(self.menubar)
    self.menuTools.setObjectName("menuTools")
    MainWindow.setMenuBar(self.menubar)
    self.statusbar = QtWidgets.QStatusBar(MainWindow)
    self.statusbar.setObjectName("statusbar")
    MainWindow.setStatusBar(self.statusbar)
    self.mainToolbar = QtWidgets.QToolBar(MainWindow)
    self.mainToolbar.setMovable(False)
    self.mainToolbar.setFloatable(False)
    self.mainToolbar.setObjectName("mainToolbar")
    MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.mainToolbar)
    self.actionOpen = QtWidgets.QAction(MainWindow)
    icon1 = QtGui.QIcon()
    icon1.addPixmap(QtGui.QPixmap(":/General/document-open.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionOpen.setIcon(icon1)
    self.actionOpen.setObjectName("actionOpen")
    self.actionNext_File = QtWidgets.QAction(MainWindow)
    icon2 = QtGui.QIcon()
    icon2.addPixmap(QtGui.QPixmap(":/General/listDown.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionNext_File.setIcon(icon2)
    self.actionNext_File.setObjectName("actionNext_File")
    self.actionPrevious_File = QtWidgets.QAction(MainWindow)
    icon3 = QtGui.QIcon()
    icon3.addPixmap(QtGui.QPixmap(":/General/listUp.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionPrevious_File.setIcon(icon3)
    self.actionPrevious_File.setObjectName("actionPrevious_File")
    self.actionNorm = QtWidgets.QAction(MainWindow)
    icon4 = QtGui.QIcon()
    icon4.addPixmap(QtGui.QPixmap(":/General/extractNormalization.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionNorm.setIcon(icon4)
    self.actionNorm.setObjectName("actionNorm")
    self.actionAddPlot = QtWidgets.QAction(MainWindow)
    icon5 = QtGui.QIcon()
    icon5.addPixmap(QtGui.QPixmap(":/General/addRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAddPlot.setIcon(icon5)
    self.actionAddPlot.setObjectName("actionAddPlot")
    self.actionClear = QtWidgets.QAction(MainWindow)
    icon6 = QtGui.QIcon()
    icon6.addPixmap(QtGui.QPixmap(":/General/clearRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionClear.setIcon(icon6)
    self.actionClear.setObjectName("actionClear")
    self.actionAdjust_Dirct_Beam = QtWidgets.QAction(MainWindow)
    icon7 = QtGui.QIcon()
    icon7.addPixmap(QtGui.QPixmap(":/General/tthZero.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAdjust_Dirct_Beam.setIcon(icon7)
    self.actionAdjust_Dirct_Beam.setObjectName("actionAdjust_Dirct_Beam")
    self.actionNormalizeScaling = QtWidgets.QAction(MainWindow)
    icon8 = QtGui.QIcon()
    icon8.addPixmap(QtGui.QPixmap(":/General/totalReflection.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionNormalizeScaling.setIcon(icon8)
    self.actionNormalizeScaling.setObjectName("actionNormalizeScaling")
    self.actionRemove = QtWidgets.QAction(MainWindow)
    icon9 = QtGui.QIcon()
    icon9.addPixmap(QtGui.QPixmap(":/General/delRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionRemove.setIcon(icon9)
    self.actionRemove.setObjectName("actionRemove")
    self.actionReduce = QtWidgets.QAction(MainWindow)
    icon10 = QtGui.QIcon()
    icon10.addPixmap(QtGui.QPixmap(":/General/reduce.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionReduce.setIcon(icon10)
    self.actionReduce.setObjectName("actionReduce")
    self.actionManual = QtWidgets.QAction(MainWindow)
    self.actionManual.setObjectName("actionManual")
    self.actionAbout = QtWidgets.QAction(MainWindow)
    self.actionAbout.setObjectName("actionAbout")
    self.actionAutoYLimits = QtWidgets.QAction(MainWindow)
    self.actionAutoYLimits.setCheckable(True)
    self.actionAutoYLimits.setChecked(True)
    icon11 = QtGui.QIcon()
    icon11.addPixmap(QtGui.QPixmap(":/General/limitYauto.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAutoYLimits.setIcon(icon11)
    self.actionAutoYLimits.setObjectName("actionAutoYLimits")
    self.actionAutomaticXPeak = QtWidgets.QAction(MainWindow)
    self.actionAutomaticXPeak.setCheckable(True)
    self.actionAutomaticXPeak.setChecked(True)
    icon12 = QtGui.QIcon()
    icon12.addPixmap(QtGui.QPixmap(":/General/fitXPos.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAutomaticXPeak.setIcon(icon12)
    self.actionAutomaticXPeak.setObjectName("actionAutomaticXPeak")
    self.actionClear_Overwrite = QtWidgets.QAction(MainWindow)
    self.actionClear_Overwrite.setObjectName("actionClear_Overwrite")
    self.actionLoad_Extraction = QtWidgets.QAction(MainWindow)
    self.actionLoad_Extraction.setObjectName("actionLoad_Extraction")
    self.actionClear_Normalizations = QtWidgets.QAction(MainWindow)
    icon13 = QtGui.QIcon()
    icon13.addPixmap(QtGui.QPixmap(":/General/clearNorm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionClear_Normalizations.setIcon(icon13)
    self.actionClear_Normalizations.setObjectName("actionClear_Normalizations")
    self.actionOpen_Compare_Window = QtWidgets.QAction(MainWindow)
    self.actionOpen_Compare_Window.setObjectName("actionOpen_Compare_Window")
    self.actionAdvanced_Background = QtWidgets.QAction(MainWindow)
    self.actionAdvanced_Background.setObjectName("actionAdvanced_Background")
    self.actionOpen_Sum = QtWidgets.QAction(MainWindow)
    self.actionOpen_Sum.setObjectName("actionOpen_Sum")
    self.actionCut_Points = QtWidgets.QAction(MainWindow)
    icon14 = QtGui.QIcon()
    icon14.addPixmap(QtGui.QPixmap(":/General/cutPoints.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionCut_Points.setIcon(icon14)
    self.actionCut_Points.setObjectName("actionCut_Points")
    self.actionAuto_Reflectivity = QtWidgets.QAction(MainWindow)
    icon15 = QtGui.QIcon()
    icon15.addPixmap(QtGui.QPixmap(":/General/autoRef.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAuto_Reflectivity.setIcon(icon15)
    self.actionAuto_Reflectivity.setObjectName("actionAuto_Reflectivity")
    self.actionStrip_Overlap = QtWidgets.QAction(MainWindow)
    icon16 = QtGui.QIcon()
    icon16.addPixmap(QtGui.QPixmap(":/General/stripOverlap.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionStrip_Overlap.setIcon(icon16)
    self.actionStrip_Overlap.setObjectName("actionStrip_Overlap")
    self.actionPolarization = QtWidgets.QAction(MainWindow)
    self.actionPolarization.setObjectName("actionPolarization")
    self.actionRaw_Data_Comparison = QtWidgets.QAction(MainWindow)
    self.actionRaw_Data_Comparison.setObjectName("actionRaw_Data_Comparison")
    self.actionIPython_Console = QtWidgets.QAction(MainWindow)
    self.actionIPython_Console.setObjectName("actionIPython_Console")
    self.actionRaise_Error = QtWidgets.QAction(MainWindow)
    self.actionRaise_Error.setObjectName("actionRaise_Error")
    self.actionLog_Debug_Messages = QtWidgets.QAction(MainWindow)
    self.actionLog_Debug_Messages.setObjectName("actionLog_Debug_Messages")
    self.actionQuick_Reduce = QtWidgets.QAction(MainWindow)
    self.actionQuick_Reduce.setObjectName("actionQuick_Reduce")
    self.actionBrowse_NXS_File = QtWidgets.QAction(MainWindow)
    self.actionBrowse_NXS_File.setObjectName("actionBrowse_NXS_File")
    self.actionFilter_Points = QtWidgets.QAction(MainWindow)
    self.actionFilter_Points.setObjectName("actionFilter_Points")
    self.actionOpen_Reduction_Preview = QtWidgets.QAction(MainWindow)
    self.actionOpen_Reduction_Preview.setObjectName("actionOpen_Reduction_Preview")
    self.actionAutoNorm = QtWidgets.QAction(MainWindow)
    self.actionAutoNorm.setCheckable(True)
    self.actionAutoNorm.setChecked(True)
    icon17 = QtGui.QIcon()
    icon17.addPixmap(QtGui.QPixmap(":/General/autoNorm.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionAutoNorm.setIcon(icon17)
    self.actionAutoNorm.setObjectName("actionAutoNorm")
    self.actionSearch_Database = QtWidgets.QAction(MainWindow)
    self.actionSearch_Database.setObjectName("actionSearch_Database")
    self.actionShow_Logs = QtWidgets.QAction(MainWindow)
    self.actionShow_Logs.setObjectName("actionShow_Logs")
    self.actionExport_Raw_Data = QtWidgets.QAction(MainWindow)
    icon18 = QtGui.QIcon()
    icon18.addPixmap(QtGui.QPixmap(":/General/exportRawData.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
    self.actionExport_Raw_Data.setIcon(icon18)
    self.actionExport_Raw_Data.setObjectName("actionExport_Raw_Data")
    self.menuFile.addAction(self.actionOpen)
    self.menuFile.addAction(self.actionOpen_Sum)
    self.menuFile.addAction(self.actionNext_File)
    self.menuFile.addAction(self.actionPrevious_File)
    self.menuFile.addSeparator()
    self.menuFile.addAction(self.actionLoad_Extraction)
    self.menuFile.addSeparator()
    self.menuFile.addAction(self.actionExport_Raw_Data)
    self.menuDebug.addAction(self.actionLog_Debug_Messages)
    self.menuDebug.addAction(self.actionShow_Logs)
    self.menuDebug.addSeparator()
    self.menuDebug.addAction(self.actionRaise_Error)
    self.menuAdvanced.addAction(self.actionAdvanced_Background)
    self.menuAdvanced.addAction(self.actionAdjust_Dirct_Beam)
    self.menuAdvanced.addAction(self.actionClear_Overwrite)
    self.menuAdvanced.addSeparator()
    self.menuAdvanced.addAction(self.actionPolarization)
    self.menuAdvanced.addAction(self.actionRaw_Data_Comparison)
    self.menuAdvanced.addAction(self.actionBrowse_NXS_File)
    self.menuAdvanced.addSeparator()
    self.menuAdvanced.addAction(self.actionIPython_Console)
    self.menuAdvanced.addAction(self.menuDebug.menuAction())
    self.menuHelp.addAction(self.actionManual)
    self.menuHelp.addSeparator()
    self.menuHelp.addAction(self.actionAbout)
    self.menuReduction.addAction(self.actionNorm)
    self.menuReduction.addAction(self.actionClear_Normalizations)
    self.menuReduction.addSeparator()
    self.menuReduction.addAction(self.actionNormalizeScaling)
    self.menuReduction.addAction(self.actionCut_Points)
    self.menuReduction.addSeparator()
    self.menuReduction.addAction(self.actionAddPlot)
    self.menuReduction.addAction(self.actionRemove)
    self.menuReduction.addAction(self.actionClear)
    self.menuReduction.addSeparator()
    self.menuReduction.addAction(self.actionReduce)
    self.menuReduction.addAction(self.actionQuick_Reduce)
    self.menuAutomatics.addAction(self.actionAutomaticXPeak)
    self.menuAutomatics.addAction(self.actionAutoYLimits)
    self.menuAutomatics.addAction(self.actionAutoNorm)
    self.menuAutomatics.addSeparator()
    self.menuAutomatics.addAction(self.actionAuto_Reflectivity)
    self.menuAutomatics.addSeparator()
    self.menuAutomatics.addAction(self.actionStrip_Overlap)
    self.menuTools.addAction(self.actionOpen_Compare_Window)
    self.menuTools.addAction(self.actionOpen_Reduction_Preview)
    self.menuTools.addSeparator()
    self.menuTools.addAction(self.actionFilter_Points)
    self.menuTools.addSeparator()
    self.menuTools.addAction(self.actionSearch_Database)
    self.menubar.addAction(self.menuFile.menuAction())
    self.menubar.addAction(self.menuReduction.menuAction())
    self.menubar.addAction(self.menuAutomatics.menuAction())
    self.menubar.addAction(self.menuTools.menuAction())
    self.menubar.addAction(self.menuAdvanced.menuAction())
    self.menubar.addAction(self.menuHelp.menuAction())
    self.mainToolbar.addAction(self.actionOpen)
    self.mainToolbar.addAction(self.actionPrevious_File)
    self.mainToolbar.addAction(self.actionNext_File)
    self.mainToolbar.addAction(self.actionReduce)
    self.mainToolbar.addAction(self.actionExport_Raw_Data)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionNorm)
    self.mainToolbar.addAction(self.actionClear_Normalizations)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionAddPlot)
    self.mainToolbar.addAction(self.actionRemove)
    self.mainToolbar.addAction(self.actionClear)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionNormalizeScaling)
    self.mainToolbar.addAction(self.actionCut_Points)
    self.mainToolbar.addAction(self.actionStrip_Overlap)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionAutomaticXPeak)
    self.mainToolbar.addAction(self.actionAutoYLimits)
    self.mainToolbar.addAction(self.actionAutoNorm)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionAuto_Reflectivity)
    self.mainToolbar.addSeparator()
    self.mainToolbar.addAction(self.actionAdjust_Dirct_Beam)

    self.retranslateUi(MainWindow)
    self.toolBox.setCurrentIndex(0)
    self.plotTab.setCurrentIndex(0)
    self.tabWidget.setCurrentIndex(0)
    self.actionOpen.triggered.connect(MainWindow.fileOpenDialog)
    self.plotTab.currentChanged['int'].connect(MainWindow.plotActiveTab)
    self.actionNext_File.triggered.connect(MainWindow.nextFile)
    self.actionPrevious_File.triggered.connect(MainWindow.prevFile)
    self.actionNorm.triggered.connect(MainWindow.setNorm)
    self.actionAddPlot.triggered.connect(MainWindow.addRefList)
    self.actionClear.triggered.connect(MainWindow.clearRefList)
    self.actionAdjust_Dirct_Beam.triggered.connect(MainWindow.overwriteDirectBeam)
    self.actionNormalizeScaling.triggered.connect(MainWindow.normalizeTotalReflection)
    self.actionRemove.triggered.connect(MainWindow.removeRefList)
    self.kizVSkfz.clicked.connect(MainWindow.plotActiveTab)
    self.qxVSqz.clicked.connect(MainWindow.plotActiveTab)
    self.kizmkfzVSqz.clicked.connect(MainWindow.plotActiveTab)
    self.actionReduce.triggered.connect(MainWindow.reduceDatasets)
    self.actionClear_Overwrite.triggered.connect(MainWindow.clearOverwrite)
    self.actionLoad_Extraction.triggered.connect(MainWindow.loadExtraction)
    self.actionAbout.triggered.connect(MainWindow.aboutDialog)
    self.reduceButton.clicked.connect(MainWindow.reduceDatasets)
    self.reductionTable.itemChanged['QTableWidgetItem*'].connect(MainWindow.reductionTableChanged)
    self.actionManual.triggered.connect(MainWindow.helpDialog)
    self.actionClear_Normalizations.triggered.connect(MainWindow.clearNormList)
    self.offspecImin.valueChanged['double'].connect(MainWindow.change_offspec_colorscale)
    self.offspecImax.valueChanged['double'].connect(MainWindow.change_offspec_colorscale)
    self.gisansImin.valueChanged['double'].connect(MainWindow.change_gisans_colorscale)
    self.gisansImax.valueChanged['double'].connect(MainWindow.change_gisans_colorscale)
    self.actionOpen_Compare_Window.triggered.connect(MainWindow.open_compare_window)
    self.actionAdvanced_Background.triggered.connect(MainWindow.open_advanced_background)
    self.clipOffspec.pressed.connect(MainWindow.clip_offspec_colorscale)
    self.actionOpen_Sum.triggered.connect(MainWindow.fileOpenSumDialog)
    self.refScale.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.color_selector.currentIndexChanged['int'].connect(MainWindow.toggleColorbars)
    self.directPixelOverwrite.valueChanged['QString'].connect(MainWindow.overwriteChanged)
    self.show_colorbars.stateChanged['int'].connect(MainWindow.toggleColorbars)
    self.refYWidth.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.refYPos.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.hide_plots.stateChanged['int'].connect(MainWindow.toggleHide)
    self.dangle0Overwrite.editingFinished.connect(MainWindow.overwriteChanged)
    self.file_list.itemSelectionChanged.connect(MainWindow.fileOpenList)
    self.refXPos.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.bgCenter.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.refXWidth.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.bgWidth.valueChanged['double'].connect(MainWindow.changeRegionValues)
    self.rangeStart.valueChanged['int'].connect(MainWindow.changeRegionValues)
    self.rangeEnd.valueChanged['int'].connect(MainWindow.changeRegionValues)
    self.fanReflectivity.toggled['bool'].connect(MainWindow.changeRegionValues)
    self.normalizeXTof.stateChanged['int'].connect(MainWindow.toggleColorbars)
    self.pushButton.clicked.connect(MainWindow.visualizePeakfinding)
    self.histogramActive.toggled['bool'].connect(MainWindow.folderModified)
    self.eventActive.toggled['bool'].connect(MainWindow.folderModified)
    self.logarithmic_colorscale.stateChanged['int'].connect(MainWindow.toggleColorbars)
    self.logarithmic_y.stateChanged['int'].connect(MainWindow.replotProjections)
    self.numberSearchEntry.returnPressed.connect(MainWindow.openByNumber)
    self.xLamda.stateChanged['int'].connect(MainWindow.toggleColorbars)
    self.tthPhi.stateChanged['int'].connect(MainWindow.toggleColorbars)
    self.trustDANGLE.toggled['bool'].connect(MainWindow.changeRegionValues)
    self.oldFormatActive.toggled['bool'].connect(MainWindow.folderModified)
    self.pushButton_2.pressed.connect(MainWindow.reloadFile)
    self.eventSplitItems.valueChanged['int'].connect(self.eventSplitIndex.setMaxValue)
    self.actionCut_Points.triggered.connect(MainWindow.cutPoints)
    self.actionAuto_Reflectivity.triggered.connect(MainWindow.autoRef)
    self.actionStrip_Overlap.triggered.connect(MainWindow.stripOverlap)
    self.selectedChannel0.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel1.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel2.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel3.released.connect(MainWindow.changeActiveChannel)
    self.bgActive.released.connect(MainWindow.changeRegionValues)
    self.actionPolarization.triggered.connect(MainWindow.open_polarization_window)
    self.actionRaw_Data_Comparison.triggered.connect(MainWindow.open_rawdata_dialog)
    self.actionIPython_Console.triggered.connect(MainWindow.run_ipython)
    self.actionRaise_Error.triggered.connect(MainWindow.raiseError)
    self.actionLog_Debug_Messages.triggered.connect(MainWindow.set_debug)
    self.reduceLastButton.pressed.connect(MainWindow.quickReduce)
    self.actionQuick_Reduce.triggered.connect(MainWindow.quickReduce)
    self.selectedChannel4.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel5.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel6.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel7.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel8.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel9.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel10.released.connect(MainWindow.changeActiveChannel)
    self.selectedChannel11.released.connect(MainWindow.changeActiveChannel)
    self.actionBrowse_NXS_File.triggered.connect(MainWindow.open_nxs_dialog)
    self.actionFilter_Points.triggered.connect(MainWindow.open_filter_dialog)
    self.actionOpen_Reduction_Preview.triggered.connect(MainWindow.open_reduction_preview)
    self.pushButton_3.clicked.connect(MainWindow.live_open)
    self.actionSearch_Database.triggered.connect(MainWindow.open_database_search)
    self.actionShow_Logs.triggered.connect(MainWindow.open_logfile_viewer)
    self.actionExport_Raw_Data.triggered.connect(MainWindow.exportRawData)
    QtCore.QMetaObject.connectSlotsByName(MainWindow)
    MainWindow.setTabOrder(self.numberSearchEntry, self.histogramActive)
    MainWindow.setTabOrder(self.histogramActive, self.eventActive)
    MainWindow.setTabOrder(self.eventActive, self.oldFormatActive)
    MainWindow.setTabOrder(self.oldFormatActive, self.eventTofBins)
    MainWindow.setTabOrder(self.eventTofBins, self.eventBinMode)
    MainWindow.setTabOrder(self.eventBinMode, self.eventSplit)
    MainWindow.setTabOrder(self.eventSplit, self.eventSplitItems)
    MainWindow.setTabOrder(self.eventSplitItems, self.eventSplitIndex)
    MainWindow.setTabOrder(self.eventSplitIndex, self.file_list)
    MainWindow.setTabOrder(self.file_list, self.refYPos)
    MainWindow.setTabOrder(self.refYPos, self.refYWidth)
    MainWindow.setTabOrder(self.refYWidth, self.refXPos)
    MainWindow.setTabOrder(self.refXPos, self.refXWidth)
    MainWindow.setTabOrder(self.refXWidth, self.bgCenter)
    MainWindow.setTabOrder(self.bgCenter, self.bgWidth)
    MainWindow.setTabOrder(self.bgWidth, self.refScale)
    MainWindow.setTabOrder(self.refScale, self.rangeStart)
    MainWindow.setTabOrder(self.rangeStart, self.rangeEnd)
    MainWindow.setTabOrder(self.rangeEnd, self.directPixelOverwrite)
    MainWindow.setTabOrder(self.directPixelOverwrite, self.dangle0Overwrite)
    MainWindow.setTabOrder(self.dangle0Overwrite, self.trustDANGLE)
    MainWindow.setTabOrder(self.trustDANGLE, self.trustSANGLE)
    MainWindow.setTabOrder(self.trustSANGLE, self.polynomOrder)
    MainWindow.setTabOrder(self.polynomOrder, self.addStitchPoints)
    MainWindow.setTabOrder(self.addStitchPoints, self.fanReflectivity)
    MainWindow.setTabOrder(self.fanReflectivity, self.pfSNR)
    MainWindow.setTabOrder(self.pfSNR, self.pfMinWidth)
    MainWindow.setTabOrder(self.pfMinWidth, self.pfMaxWidth)
    MainWindow.setTabOrder(self.pfMaxWidth, self.pfRidgeLength)
    MainWindow.setTabOrder(self.pfRidgeLength, self.pushButton)
    MainWindow.setTabOrder(self.pushButton, self.show_colorbars)
    MainWindow.setTabOrder(self.show_colorbars, self.color_selector)
    MainWindow.setTabOrder(self.color_selector, self.logarithmic_colorscale)
    MainWindow.setTabOrder(self.logarithmic_colorscale, self.logarithmic_y)
    MainWindow.setTabOrder(self.logarithmic_y, self.hide_plots)
    MainWindow.setTabOrder(self.hide_plots, self.xLamda)
    MainWindow.setTabOrder(self.xLamda, self.normalizeXTof)
    MainWindow.setTabOrder(self.normalizeXTof, self.tthPhi)
    MainWindow.setTabOrder(self.tthPhi, self.plotTab)
    MainWindow.setTabOrder(self.plotTab, self.tabWidget)
    MainWindow.setTabOrder(self.tabWidget, self.reductionTable)
    MainWindow.setTabOrder(self.reductionTable, self.reduceButton)
    MainWindow.setTabOrder(self.reduceButton, self.normalizeTable)
    MainWindow.setTabOrder(self.normalizeTable, self.kizmkfzVSqz)
    MainWindow.setTabOrder(self.kizmkfzVSqz, self.qxVSqz)
    MainWindow.setTabOrder(self.qxVSqz, self.kizVSkfz)
    MainWindow.setTabOrder(self.kizVSkfz, self.offspecImin)
    MainWindow.setTabOrder(self.offspecImin, self.offspecImax)
    MainWindow.setTabOrder(self.offspecImax, self.clipOffspec)
    MainWindow.setTabOrder(self.clipOffspec, self.gisansImin)
    MainWindow.setTabOrder(self.gisansImin, self.gisansImax)
    MainWindow.setTabOrder(self.gisansImax, self.daslogTableBox)

  def retranslateUi(self, MainWindow):
    _translate = QtCore.QCoreApplication.translate
    MainWindow.setWindowTitle(_translate("MainWindow", "QuickNXS"))
    self.label_28.setToolTip(_translate("MainWindow", "Search for a file by measurement number"))
    self.label_28.setText(_translate("MainWindow", "Open Number:"))
    self.numberSearchEntry.setToolTip(_translate("MainWindow", "Search for a file by measurement number"))
    self.histogramActive.setText(_translate("MainWindow", "Histogram"))
    self.eventActive.setText(_translate("MainWindow", "Event"))
    self.oldFormatActive.setText(_translate("MainWindow", "Old"))
    self.label_27.setToolTip(_translate("MainWindow", "The number of bins for the Time of Flight channels"))
    self.label_27.setText(_translate("MainWindow", "Bins "))
    self.eventTofBins.setToolTip(_translate("MainWindow", "The number of bins for the Time of Flight channels"))
    self.eventBinMode.setToolTip(_translate("MainWindow", "<html><head/><body><p>How to bin the time of flight channels:</p><p>  Linear: Equally spaced in ToF</p><p>  1/x: Equally spaced in Q</p></body></html>"))
    self.eventBinMode.setItemText(0, _translate("MainWindow", "Equal ΔToF"))
    self.eventBinMode.setItemText(1, _translate("MainWindow", "Equal ΔQ"))
    self.eventBinMode.setItemText(2, _translate("MainWindow", "Equal Δλ/λ"))
    self.label_38.setText(_translate("MainWindow", "Index"))
    self.label_39.setText(_translate("MainWindow", "Items"))
    self.eventSplit.setText(_translate("MainWindow", "Split by event time"))
    self.eventTotalTimeLabel.setText(_translate("MainWindow", "(0min)"))
    self.pushButton_2.setText(_translate("MainWindow", "Reload Active File"))
    self.pushButton_3.setText(_translate("MainWindow", "Load Live Data"))
    self.refYPos.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
    self.label_3.setToolTip(_translate("MainWindow", "Y Pixel Window"))
    self.label_3.setText(_translate("MainWindow", "Y"))
    self.label_2.setText(_translate("MainWindow", "Width"))
    self.rangeEnd.setToolTip(_translate("MainWindow", "<html><head/><body><p>Remove points from the extracted intensity on the high Q side. </p><p>Uses the full ToF range available in the file, so it is possible it does not have any effect for lower values.</p></body></html>"))
    self.refXPos.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
    self.bgWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
    self.bgCenter.setToolTip(_translate("MainWindow", "Center of region used for extraction"))
    self.label_4.setToolTip(_translate("MainWindow", "X Pixel Window"))
    self.label_4.setText(_translate("MainWindow", "X"))
    self.refScale.setToolTip(_translate("MainWindow", "Scaling factor for the reflectivity in powers of 10"))
    self.rangeStart.setToolTip(_translate("MainWindow", "<html><head/><body><p>Remove points from the extracted intensity on the low Q side. </p><p>Uses the full ToF range available in the file, so it is possible it does not have any effect for lower values.</p></body></html>"))
    self.refXWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
    self.refYWidth.setToolTip(_translate("MainWindow", "Width of region used for extraction"))
    self.label_20.setText(_translate("MainWindow", "Cut Pts"))
    self.label.setText(_translate("MainWindow", "Position"))
    self.label_5.setToolTip(_translate("MainWindow", "Scaling factor for the reflectivity in powers of 10"))
    self.label_5.setText(_translate("MainWindow", "Scale 10^"))
    self.bgActive.setText(_translate("MainWindow", "BG X"))
    self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "Reflectivity Extraction (Basic)"))
    self.label_18.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite the direct pixel value, read from the file.</p><p>Usefull if the wrong values have been written during the measurement.</p></body></html>"))
    self.label_18.setText(_translate("MainWindow", "Direct Pixel"))
    self.directPixelOverwrite.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite the direct pixel value, read from the file.</p><p>Usefull if the wrong values have been written during the measurement.</p></body></html>"))
    self.label_19.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite the DANGLE0 value from the datafile.</p><p>Useful if the values have not been set properly during the measurement.</p></body></html>"))
    self.label_19.setText(_translate("MainWindow", "Dangle0"))
    self.dangle0Overwrite.setToolTip(_translate("MainWindow", "<html><head/><body><p>Overwrite the DANGLE0 value from the datafile.</p><p>Useful if the values have not been set properly during the measurement.</p></body></html>"))
    self.dangle0Overwrite.setText(_translate("MainWindow", "None"))
    self.label_30.setText(_translate("MainWindow", "Trusted Angle:"))
    self.trustDANGLE.setText(_translate("MainWindow", "DANGLE"))
    self.trustSANGLE.setText(_translate("MainWindow", "SANGLE"))
    self.label_36.setText(_translate("MainWindow", "Stitch Polynom Order"))
    self.label_31.setText(_translate("MainWindow", "Stitching Add Points:"))
    self.addStitchPoints.setToolTip(_translate("MainWindow", "When Stitching together two scans, add this amount of points from each scan to the overlap area for the fit."))
    self.fanReflectivity.setToolTip(_translate("MainWindow", "<html><head/><body><p>Evaluate Q for each X line of the reflectivity and combine these measurements.</p><p>Can be used with a large X-width of e.g. 15 for samples scattering to a large 2θ area.</p></body></html>"))
    self.fanReflectivity.setText(_translate("MainWindow", "\"Fan\"-Reflection"))
    self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "Reflectivity Extraction (Advanced)"))
    self.label_29.setText(_translate("MainWindow", "Peak Finder"))
    self.label_24.setText(_translate("MainWindow", "Signal/Noise"))
    self.label_26.setText(_translate("MainWindow", "Min. Width"))
    self.label_25.setText(_translate("MainWindow", "Max. Width"))
    self.label_23.setText(_translate("MainWindow", "Ridge Length"))
    self.pushButton.setText(_translate("MainWindow", "Visualize"))
    self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), _translate("MainWindow", "Peak Finder Algorithm"))
    self.groupBox_2.setTitle(_translate("MainWindow", "Plot Options"))
    self.xLamda.setToolTip(_translate("MainWindow", "Replace ToF axis with wavelength for the maps"))
    self.xLamda.setText(_translate("MainWindow", "X-λ Maps"))
    self.tthPhi.setToolTip(_translate("MainWindow", "Replace X and Y axes by the according scattering angle for the maps"))
    self.tthPhi.setText(_translate("MainWindow", "2θ-φ Maps"))
    self.show_colorbars.setToolTip(_translate("MainWindow", "Show a colorbar for the map plots"))
    self.show_colorbars.setText(_translate("MainWindow", "Colorbars"))
    self.normalizeXTof.setToolTip(_translate("MainWindow", "Normalize the intensity in the X-ToF maps by the incident beam measurement"))
    self.normalizeXTof.setText(_translate("MainWindow", "Norm. X-ToF/λ"))
    self.logarithmic_colorscale.setToolTip(_translate("MainWindow", "Logarithmic colorscale in the maps"))
    self.logarithmic_colorscale.setText(_translate("MainWindow", "Log Colorscale"))
    self.logarithmic_y.setToolTip(_translate("MainWindow", "Logarithmic Y-scale for the projections and reflectivity"))
    self.logarithmic_y.setText(_translate("MainWindow", "Log Y for lines"))
    self.color_selector.setToolTip(_translate("MainWindow", "Select the color scale from a list of presets"))
    self.color_selector.setItemText(0, _translate("MainWindow", "default"))
    self.color_selector.setItemText(1, _translate("MainWindow", "gist_ncar"))
    self.color_selector.setItemText(2, _translate("MainWindow", "gist_rainbow"))
    self.color_selector.setItemText(3, _translate("MainWindow", "jet"))
    self.color_selector.setItemText(4, _translate("MainWindow", "hsv"))
    self.color_selector.setItemText(5, _translate("MainWindow", "hot"))
    self.color_selector.setItemText(6, _translate("MainWindow", "binary"))
    self.hide_plots.setToolTip(_translate("MainWindow", "Hide empty channels in the X-Y and X-ToF tabs to make more space for the measured channels"))
    self.hide_plots.setText(_translate("MainWindow", "Hide Empty"))
    self.currentChannel.setToolTip(_translate("MainWindow", "Displays information about the dataset selected at the moment"))
    self.currentChannel.setText(_translate("MainWindow", "Dataset information will be displayed here after loading"))
    self.label_17.setToolTip(_translate("MainWindow", "Direct pixel value read from file, if overwrite is active, the read value is in brackets"))
    self.label_17.setText(_translate("MainWindow", "Direct Pixel"))
    self.label_11.setToolTip(_translate("MainWindow", "Detector Angle value read from file"))
    self.label_11.setText(_translate("MainWindow", "DANGLE"))
    self.label_15.setToolTip(_translate("MainWindow", "Two theta value calculated from file, if DANGLE0 overwrite is active, the read value is in brackets"))
    self.label_15.setText(_translate("MainWindow", "DANGLE0"))
    self.datasetDirectPixel.setToolTip(_translate("MainWindow", "Direct pixel value read from file, if overwrite is active, the read value is in brackets"))
    self.datasetDangle.setToolTip(_translate("MainWindow", "Detector Angle value read from file"))
    self.datasetDangle0.setToolTip(_translate("MainWindow", "Two theta value calculated from file, if DANGLE0 overwrite is active, the read value is in brackets"))
    self.label_8.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_8.setText(_translate("MainWindow", "λ"))
    self.label_12.setToolTip(_translate("MainWindow", "Sample angle read from file"))
    self.label_12.setText(_translate("MainWindow", "SANGLE"))
    self.datasetSangle.setToolTip(_translate("MainWindow", "Sample angle read from file"))
    self.label_13.setToolTip(_translate("MainWindow", "Sample angle calculated from 2Θ and X-center position"))
    self.label_13.setText(_translate("MainWindow", "SANGLE-calc"))
    self.datasetAi.setToolTip(_translate("MainWindow", "Sample angle calculated from 2Θ and X-center position"))
    self.datasetLambda.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_9.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_9.setText(_translate("MainWindow", "Proton Charge"))
    self.datasetPCharge.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_10.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_10.setText(_translate("MainWindow", "Total Counts"))
    self.datasetTotCounts.setToolTip(_translate("MainWindow", "Read from file"))
    self.label_6.setText(_translate("MainWindow", "Counting Time"))
    self.label_37.setText(_translate("MainWindow", "Count Rate"))
    self.datasetROI.setToolTip(_translate("MainWindow", "Counts in the window selected for X and Y"))
    self.label_14.setToolTip(_translate("MainWindow", "Counts in the window selected for X and Y"))
    self.label_14.setText(_translate("MainWindow", "Counts ROI"))
    self.label_7.setToolTip(_translate("MainWindow", "A list of files selected fro normalization"))
    self.label_7.setText(_translate("MainWindow", "Direct Beam Runs:"))
    self.normalizationLabel.setToolTip(_translate("MainWindow", "A list of files selected fro normalization"))
    self.normalizationLabel.setText(_translate("MainWindow", "Unset"))
    self.selectedChannel0.setText(_translate("MainWindow", "++"))
    self.selectedChannel5.setText(_translate("MainWindow", "--"))
    self.selectedChannel7.setText(_translate("MainWindow", "-+"))
    self.selectedChannel1.setText(_translate("MainWindow", "--"))
    self.selectedChannel4.setText(_translate("MainWindow", "++"))
    self.selectedChannel2.setText(_translate("MainWindow", "+-"))
    self.selectedChannel3.setText(_translate("MainWindow", "-+"))
    self.selectedChannel6.setText(_translate("MainWindow", "+-"))
    self.selectedChannel8.setText(_translate("MainWindow", "++"))
    self.selectedChannel9.setText(_translate("MainWindow", "--"))
    self.selectedChannel10.setText(_translate("MainWindow", "+-"))
    self.selectedChannel11.setText(_translate("MainWindow", "-+"))
    item = self.reductionTable.horizontalHeaderItem(0)
    item.setText(_translate("MainWindow", "Run No."))
    item.setToolTip(_translate("MainWindow", "File Number"))
    item = self.reductionTable.horizontalHeaderItem(1)
    item.setText(_translate("MainWindow", "I0"))
    item.setToolTip(_translate("MainWindow", "Scaling Factor"))
    item = self.reductionTable.horizontalHeaderItem(2)
    item.setText(_translate("MainWindow", "NL"))
    item.setToolTip(_translate("MainWindow", "Points cut from low Q side"))
    item = self.reductionTable.horizontalHeaderItem(3)
    item.setText(_translate("MainWindow", "NR"))
    item.setToolTip(_translate("MainWindow", "Points cut from high Q side"))
    item = self.reductionTable.horizontalHeaderItem(4)
    item.setText(_translate("MainWindow", "x0"))
    item.setToolTip(_translate("MainWindow", "Center X-Pixel of Window for Reflectivity"))
    item = self.reductionTable.horizontalHeaderItem(5)
    item.setText(_translate("MainWindow", "xw"))
    item.setToolTip(_translate("MainWindow", "Width in X-Pixels of Window for Reflectivity"))
    item = self.reductionTable.horizontalHeaderItem(6)
    item.setText(_translate("MainWindow", "y0"))
    item.setToolTip(_translate("MainWindow", "Center Y-Pixel of Window for Reflectivity"))
    item = self.reductionTable.horizontalHeaderItem(7)
    item.setText(_translate("MainWindow", "yw"))
    item.setToolTip(_translate("MainWindow", "Width in Y-Pixels of Window for Reflectivity"))
    item = self.reductionTable.horizontalHeaderItem(8)
    item.setText(_translate("MainWindow", "bg0"))
    item.setToolTip(_translate("MainWindow", "Background Region Center"))
    item = self.reductionTable.horizontalHeaderItem(9)
    item.setText(_translate("MainWindow", "bgw"))
    item.setToolTip(_translate("MainWindow", "Background Region Width"))
    item = self.reductionTable.horizontalHeaderItem(10)
    item.setText(_translate("MainWindow", "DPix"))
    item.setToolTip(_translate("MainWindow", "DirectPixel"))
    item = self.reductionTable.horizontalHeaderItem(11)
    item.setText(_translate("MainWindow", "TTH"))
    item.setToolTip(_translate("MainWindow", "DANGLE-DANGLE0"))
    item = self.reductionTable.horizontalHeaderItem(12)
    item.setText(_translate("MainWindow", "Dir. Run"))
    item.setToolTip(_translate("MainWindow", "The normalization file used for this dataset"))
    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Data"))
    self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "A list of datasets that will be used for reduction"))
    item = self.normalizeTable.horizontalHeaderItem(0)
    item.setText(_translate("MainWindow", "Run No."))
    item.setToolTip(_translate("MainWindow", "Dataset number"))
    item = self.normalizeTable.horizontalHeaderItem(1)
    item.setText(_translate("MainWindow", "λ"))
    item.setToolTip(_translate("MainWindow", "Central Wavelength"))
    item = self.normalizeTable.horizontalHeaderItem(2)
    item.setText(_translate("MainWindow", "x0"))
    item.setToolTip(_translate("MainWindow", "X-Center of extraction window"))
    item = self.normalizeTable.horizontalHeaderItem(3)
    item.setText(_translate("MainWindow", "xw"))
    item.setToolTip(_translate("MainWindow", "X-Width of extraction window"))
    item = self.normalizeTable.horizontalHeaderItem(4)
    item.setText(_translate("MainWindow", "y0"))
    item.setToolTip(_translate("MainWindow", "Y-Center of extraction window"))
    item = self.normalizeTable.horizontalHeaderItem(5)
    item.setText(_translate("MainWindow", "yw"))
    item.setToolTip(_translate("MainWindow", "Y-Width of extraction window"))
    item = self.normalizeTable.horizontalHeaderItem(6)
    item.setText(_translate("MainWindow", "bg0"))
    item.setToolTip(_translate("MainWindow", "Background X-Center"))
    item = self.normalizeTable.horizontalHeaderItem(7)
    item.setText(_translate("MainWindow", "bgw"))
    item.setToolTip(_translate("MainWindow", "Background X-width"))
    self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Direct Beam"))
    self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "A list of datasets available for wavelength normalization"))
    self.reduceButton.setText(_translate("MainWindow", "Reduce..."))
    self.reduceLastButton.setText(_translate("MainWindow", "Quick-Reduce (use last options)"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.Overview_Tab), _translate("MainWindow", "Overview"))
    self.plotTab.setTabToolTip(self.plotTab.indexOf(self.Overview_Tab), _translate("MainWindow", "Show the active dataset and information about the datasets selected for normalization and reduction"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.XY_Tab), _translate("MainWindow", "X-Y"))
    self.plotTab.setTabToolTip(self.plotTab.indexOf(self.XY_Tab), _translate("MainWindow", "X-Y intensity maps for all channels in this file"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.XTof_Tab), _translate("MainWindow", "X-ToF"))
    self.plotTab.setTabToolTip(self.plotTab.indexOf(self.XTof_Tab), _translate("MainWindow", "X-ToF intensity maps for all channels in this file"))
    self.kizmkfzVSqz.setText(_translate("MainWindow", "(ki_z-kf_z) VS. Qz"))
    self.qxVSqz.setText(_translate("MainWindow", "Qx VS. Qz"))
    self.kizVSkfz.setText(_translate("MainWindow", "ki_z VS. kf_z"))
    self.label_21.setText(_translate("MainWindow", "Imin 10^"))
    self.clipOffspec.setText(_translate("MainWindow", "Clip"))
    self.label_22.setText(_translate("MainWindow", "Imax 10^"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.OffSpec_Tab), _translate("MainWindow", "OffSpec Preview"))
    self.plotTab.setTabToolTip(self.plotTab.indexOf(self.OffSpec_Tab), _translate("MainWindow", "Off-Specular scattering intensity preview for all files in the reduction list"))
    self.label_16.setText(_translate("MainWindow", "Imin 10^"))
    self.label_32.setText(_translate("MainWindow", "Imax 10^"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.gisansTab), _translate("MainWindow", "GISANS Preview"))
    self.daslogBox.setTitle(_translate("MainWindow", "Recorded values for all Motors/Devices:"))
    self.daslogTableBox.setSortingEnabled(True)
    item = self.daslogTableBox.horizontalHeaderItem(0)
    item.setText(_translate("MainWindow", "Name"))
    item = self.daslogTableBox.horizontalHeaderItem(1)
    item.setText(_translate("MainWindow", "Value"))
    item = self.daslogTableBox.horizontalHeaderItem(2)
    item.setText(_translate("MainWindow", "Unit"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.daslogTab), _translate("MainWindow", "DAS Logs"))
    self.plotTab.setTabToolTip(self.plotTab.indexOf(self.daslogTab), _translate("MainWindow", "Motor and parameter log read from the file"))
    self.plotTab.setTabText(self.plotTab.indexOf(self.compareTab), _translate("MainWindow", "Compare"))
    self.label_35.setText(_translate("MainWindow", "X-Projection"))
    self.label_34.setText(_translate("MainWindow", "Y-Projection"))
    self.label_33.setText(_translate("MainWindow", "Reflectivity"))
    self.menuFile.setTitle(_translate("MainWindow", "File"))
    self.menuAdvanced.setTitle(_translate("MainWindow", "Advanced"))
    self.menuDebug.setTitle(_translate("MainWindow", "Debug"))
    self.menuHelp.setTitle(_translate("MainWindow", "Help"))
    self.menuReduction.setTitle(_translate("MainWindow", "Reduction"))
    self.menuAutomatics.setTitle(_translate("MainWindow", "Automatics"))
    self.menuTools.setTitle(_translate("MainWindow", "Tools"))
    self.mainToolbar.setWindowTitle(_translate("MainWindow", "Main Toolbar"))
    self.actionOpen.setText(_translate("MainWindow", "Open..."))
    self.actionOpen.setToolTip(_translate("MainWindow", "Open a new file (Ctrl+O)"))
    self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
    self.actionNext_File.setText(_translate("MainWindow", "Next File"))
    self.actionNext_File.setToolTip(_translate("MainWindow", "Next file in active folder (Ctrl+D)"))
    self.actionNext_File.setShortcut(_translate("MainWindow", "Ctrl+D"))
    self.actionPrevious_File.setText(_translate("MainWindow", "Previous File"))
    self.actionPrevious_File.setToolTip(_translate("MainWindow", "Previous file in current foldet (Ctrl+Shift+D)"))
    self.actionPrevious_File.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
    self.actionNorm.setText(_translate("MainWindow", "Set Normalization"))
    self.actionNorm.setToolTip(_translate("MainWindow", "Take current dataset as direct beam for wavelength normalization (Ctrl+W)"))
    self.actionNorm.setShortcut(_translate("MainWindow", "Ctrl+W"))
    self.actionAddPlot.setText(_translate("MainWindow", "Keep Item in List"))
    self.actionAddPlot.setToolTip(_translate("MainWindow", "Add current dataset to data reduction list (Ctrl+Q)"))
    self.actionAddPlot.setShortcut(_translate("MainWindow", "Ctrl+Q"))
    self.actionClear.setText(_translate("MainWindow", "Clear List"))
    self.actionClear.setToolTip(_translate("MainWindow", "Remove all plots from data reduction list (CTRL+SHIFT+Q)"))
    self.actionClear.setShortcut(_translate("MainWindow", "Ctrl+Shift+Q"))
    self.actionAdjust_Dirct_Beam.setText(_translate("MainWindow", "Adjust Dirct Beam"))
    self.actionAdjust_Dirct_Beam.setToolTip(_translate("MainWindow", "Use active dataset to set overwrite parameters for direct pixel and Dangle0"))
    self.actionNormalizeScaling.setText(_translate("MainWindow", "Set Scaling"))
    self.actionNormalizeScaling.setToolTip(_translate("MainWindow", "Scale total reflection to 1/fit overlap to previous run (Ctrl+S)"))
    self.actionNormalizeScaling.setShortcut(_translate("MainWindow", "Ctrl+S"))
    self.actionRemove.setText(_translate("MainWindow", "Remove Line"))
    self.actionRemove.setToolTip(_translate("MainWindow", "Remove selected plots from data reduction list"))
    self.actionReduce.setText(_translate("MainWindow", "Reduce..."))
    self.actionReduce.setToolTip(_translate("MainWindow", "Use the active table to extrac reduced datasets and save them"))
    self.actionManual.setText(_translate("MainWindow", "Manual..."))
    self.actionAbout.setText(_translate("MainWindow", "About..."))
    self.actionAutoYLimits.setText(_translate("MainWindow", "Automatic Y Limits"))
    self.actionAutoYLimits.setToolTip(_translate("MainWindow", "Try to find the Y region of the beam automatically"))
    self.actionAutomaticXPeak.setText(_translate("MainWindow", "Automatic Peak Finder"))
    self.actionAutomaticXPeak.setToolTip(_translate("MainWindow", "Find the reflected peak automatically when loading a new file"))
    self.actionClear_Overwrite.setText(_translate("MainWindow", "Clear Overwrite"))
    self.actionLoad_Extraction.setText(_translate("MainWindow", "Load Extraction..."))
    self.actionLoad_Extraction.setShortcut(_translate("MainWindow", "Ctrl+Alt+O"))
    self.actionClear_Normalizations.setText(_translate("MainWindow", "Clear Normalizations"))
    self.actionClear_Normalizations.setToolTip(_translate("MainWindow", "Remove all datasets from the direct beam list (CTRL+SHIFT+W)"))
    self.actionClear_Normalizations.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
    self.actionOpen_Compare_Window.setText(_translate("MainWindow", "Open Compare Window..."))
    self.actionAdvanced_Background.setText(_translate("MainWindow", "Advanced Background..."))
    self.actionAdvanced_Background.setShortcut(_translate("MainWindow", "Ctrl+B"))
    self.actionOpen_Sum.setText(_translate("MainWindow", "Open Sum..."))
    self.actionOpen_Sum.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
    self.actionCut_Points.setText(_translate("MainWindow", "Cut Points (L/R)"))
    self.actionCut_Points.setToolTip(_translate("MainWindow", "Change the left and right cutoff (Cut Pts) values for the active file from the normalization intensity (Ctrl+Shift+C)"))
    self.actionCut_Points.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
    self.actionAuto_Reflectivity.setText(_translate("MainWindow", "Auto Reflectivity"))
    self.actionAuto_Reflectivity.setToolTip(_translate("MainWindow", "Start with active dataset as total reflectivity region and continue adding datasets until the incident angle gets lower than for the last dataset (Ctrl+Shift+A)"))
    self.actionAuto_Reflectivity.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
    self.actionStrip_Overlap.setText(_translate("MainWindow", "Strip Overlap"))
    self.actionStrip_Overlap.setToolTip(_translate("MainWindow", "Strip points from datasets that overlap with the subsequent dataset in the reflectivity (Ctrl+Shift+S)"))
    self.actionStrip_Overlap.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
    self.actionPolarization.setText(_translate("MainWindow", "Polarization..."))
    self.actionRaw_Data_Comparison.setText(_translate("MainWindow", "Raw Data Comparison..."))
    self.actionIPython_Console.setText(_translate("MainWindow", "IPython Console"))
    self.actionIPython_Console.setShortcut(_translate("MainWindow", "Ctrl+I"))
    self.actionRaise_Error.setText(_translate("MainWindow", "Raise Error"))
    self.actionLog_Debug_Messages.setText(_translate("MainWindow", "Log Debug Messages"))
    self.actionQuick_Reduce.setText(_translate("MainWindow", "Quick-Reduce"))
    self.actionQuick_Reduce.setToolTip(_translate("MainWindow", "Reduce list using options from last export"))
    self.actionQuick_Reduce.setShortcut(_translate("MainWindow", "Ctrl+R"))
    self.actionBrowse_NXS_File.setText(_translate("MainWindow", "Browse NXS File..."))
    self.actionBrowse_NXS_File.setShortcut(_translate("MainWindow", "Ctrl+N"))
    self.actionFilter_Points.setText(_translate("MainWindow", "Filter Points..."))
    self.actionFilter_Points.setToolTip(_translate("MainWindow", "Remove points from already exported reflectivity datasets"))
    self.actionOpen_Reduction_Preview.setText(_translate("MainWindow", "Open Reduction Preview..."))
    self.actionAutoNorm.setText(_translate("MainWindow", "AutoNorm"))
    self.actionAutoNorm.setToolTip(_translate("MainWindow", "Automatically select normalization file with closest slit sizes"))
    self.actionSearch_Database.setText(_translate("MainWindow", "Search Database..."))
    self.actionShow_Logs.setText(_translate("MainWindow", "Show Logs..."))
    self.actionExport_Raw_Data.setText(_translate("MainWindow", "Export Raw Data..."))
    self.actionExport_Raw_Data.setToolTip(_translate("MainWindow", "Save the raw, unnormalized intensity data of the current dataset."))

from .compare_plots import CompareWidget
from .help_widgets import LimitingSpinBox
from .mplwidget import MPLWidget
from .persistentframe import PersistentFrame
from . import icons_rc
